[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NEON Ecological Forecasting Challenge",
    "section": "",
    "text": "The National Science Foundation funded Ecological Forecasting Initiative Research Coordination Network (EFI-RCN) is hosting a NEON Ecological Forecast Challenge with the goal to create a community of practice that builds capacity for ecological forecasting by leveraging NEON data products. The Challenge revolves around the five theme areas listed below that span aquatic and terrestrial systems, and population, community, and ecosystem processes across a broad range of ecoregions that uses data collected by NEON.\nAs a community, we are excited to learn more about the predictability of ecological processes by forecasting NEON data prior to its release. What modeling frameworks, mechanistic processes, and statistical approaches best capture community, population, and ecosystem dynamics? These questions are answerable by a community generating a diverse array of forecasts. The Challenge is open to any individual or team that wants to submit forecasts and includes categories for different career stages. Individuals or team contacts can register to submit forecasts Here\nThe design of the Challenge is the result of contributions of over 200 participants in the May 2020 virtual EFI-RCN meeting, including partner organizations, and the hard work from the Design Teams that have developed the protocols for each of the themes.\nComputational resources are supported by NSF funded CyVerse, Jetstream, and XSEDE.\nWe have prepared introductory videos from the December 9, 2020 AGU EFI Town Hall. They provide an overview of the\n\nChallenge\n\nChallenge cyberinfrastructure\n\nNEON data streams\n\nEFI-RCN Steering Committee\nLead: R. Quinn Thomas (Virginia Tech)\nProgram Manager: Jody Peters (University of Notre Dame)\nMichael Dietze (Boston University)\nMelissa Kenney (University of Minnesota)\nChristine Laney (NEON)\nJason McLachlan (University of Notre Dame)\nCarl Boettiger (University of California, Berkeley)\nCayelan Carey (Virginia Tech)\nAndy Fox (UCAR)\nLeah Johnson (Virginia Tech)\nWhitney Woelmer (Virginia Tech; Student member)\nAlyssa Willson (University of Notre Dame; Student member)\nVideo Introducng the NEON Ecological Forecasting Challenge.\nThis video was originally recorded for the 2021 Early Career Annual Meeting"
  },
  {
    "objectID": "Aquatics.html",
    "href": "Aquatics.html",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "",
    "text": "What: Freshwater surface water temperature, oxygen, and chlorophyll-a.\nWhere: 7 lakes and 16 river/stream NEON sites.\nWhen: Forecasts produced daily with a 35-day forecast horizon. Forecast submissions are accepted daily throughout 2022. The only requirement is that submissions are predictions of the future at the time the forecast is submitted.\nWhy: Freshwater surface water temperature, dissolved oxygen, and chlorophyll-a are critical for life in aquatic environments and can represent the health of the system\nWho: Open to any individual or team that registers\nHow: REGISTER your team and submit forecast. If you registered for the Round 1 (2021) and are using the same team and method then you do not need to re-register.\nThe video below is an overview of the Aquatic Ecosystems Challenge that was recorded for the 2021 Early Career Annual Meeting\nWe held a Q&A session on May 21, 2021. You can find a recording from that session HERE."
  },
  {
    "objectID": "Aquatics.html#overview",
    "href": "Aquatics.html#overview",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.1 Overview",
    "text": "1.1 Overview\nIn streams and rivers, forecasting water temperature can be meaningful for protecting aquatic communities while maintaining socio-economic benefits (Ouellet-Proulx et al. 2017). In lentic systems, successfully forecasting surface water temperatures can be important for fisheries and water utilities that need to manage the outflowing temperatures (Zhu et al. 2020). Recently, water temperature forecasts in lakes have been used to predict seasonal turnover when nutrients from the bottom can be mixed to the surface and impair the water quality.\nDissolved oxygen concentration is a critically important variable in limnology. Forecasts of dissolved oxygen in freshwaters is the first step to understanding other freshwater ecosystem processes. For example, oxygen serves as the gatekeeper to other biogeochemical reactions that occur in rivers and lakes. Preemptive forecasts of dissolved oxygen concentrations can anticipate periods of high or low oxygen availability, thereby providing insight into how the ecosystem may change at relatively short timescales.\nchlorophyll-a is a metric of phytoplankton biomass. Phytoplankton biomass are the base of the aquatic food-web and an important indicator of water quality for managers."
  },
  {
    "objectID": "Aquatics.html#challenge",
    "href": "Aquatics.html#challenge",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.2 Challenge",
    "text": "1.2 Challenge\nThis design challenge asks teams to produce forecasts of mean daily surface water temperature and/or dissolved oxygen in 7 NEON lake and/or 16 NEON river/stream sites for 35-days in the future. Additionally, forecasts of chlorophyll-a are invited for the 7 lakes and 3 non-wadeable river NEON sites.\nYou can chose to submit to either the lakes, rivers or streams or all three. You can also chose to submit any of the three focal variables (temperature, oxygen, and chlorophyll).\nTeams are asked to submit their 35-day forecasts of NEON surface mean daily surface water temperature, dissolved oxygen, and/or chlorophyll-a along with uncertainty estimates and metadata. NEON surface water temperature, dissolved oxygen, and chlorophyll-a collected prior to the current date will be provided and may be used to build and improve the forecast models. Other data can be used as long as teams provide access (minimum of URL, but ideally a script) to all teams in the challenge."
  },
  {
    "objectID": "Aquatics.html#data-targets",
    "href": "Aquatics.html#data-targets",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.3 Data: Targets",
    "text": "1.3 Data: Targets\nThe R script for generating the evaluation and training data (i.e., targets) can be found at: https://github.com/eco4cast/neon4cast-aquatics\nThe challenge uses the following NEON data products: - DP1.20264.001: Temperature at specific depth in surface water for lakes - DP1.20288.001: Water quality (includes oxygen and chlorophyll-a)\n- DP1.20035.001{target =“_blank”}: Temperature in surface waters for streams\nA file with previously released NEON data that has been processed into targets is provided below. The target script can be found here. The same processing will be applied to new data that are used for forecast evaluation.\nHere is the format of the target file\n\nreadr::read_csv(\"https://data.ecoforecast.org/neon4cast-targets/aquatics/aquatics-targets.csv.gz\") |> \n  na.omit()\n\n# A tibble: 57,687 × 4\n   time       site_id variable    observed\n   <date>     <chr>   <chr>          <dbl>\n 1 2016-08-12 ARIK    oxygen          3.40\n 2 2016-08-13 ARIK    oxygen          4.16\n 3 2016-08-14 ARIK    oxygen          4.07\n 4 2016-08-15 ARIK    oxygen          3.91\n 5 2016-08-16 ARIK    oxygen          3.86\n 6 2016-08-17 ARIK    oxygen          4.35\n 7 2016-08-18 ARIK    oxygen          4.35\n 8 2016-08-18 ARIK    temperature    20.6 \n 9 2016-08-19 ARIK    oxygen          4.03\n10 2016-08-19 ARIK    temperature    20.1 \n# … with 57,677 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\nThe target file has the following columns\n\ntime: date of observation\n\nsite_id: NEON site code\n\nvariable: variable (temperature, oxygen, chla)\nobserved: daily mean value\n\n\n1.3.1 Surface Mean Daily Dissolved Oxygen Concentration\nDefinition\nDissolved oxygen (DO) is the concentration of oxygen dissolved in water. NEON’s 30-minute time resolution from deployed water quality sondes among the freshwater sites reports this concentration as mg L-1. We have adapted the available NEON DO data to output the mean daily DO concentration in mg L-1 from a water quality sonde(s) deployed in the top 1 m of the water column across all sites. Where multiple depths have observations within this depth range an average was taken. Common DO concentrations range between 0 and 12 mg L-1 and DO concentrations less than 2 mg L-1 are considered hypoxic.\nMotivation\nDissolved oxygen concentration is a critically important variable in limnology. Forecasts of dissolved oxygen in freshwaters is the first step to understanding other freshwater ecosystem processes. For example, oxygen serves as the gatekeeper to other biogeochemical reactions that occur as well as determine the variety and health of aquatic organisms present in rivers and lakes. Preemptive forecasts of dissolved oxygen concentrations can anticipate periods of high or low oxygen availability, thereby providing insight into how the ecosystem may change at relatively short timescales.\n\n\n1.3.2 Surface Mean Daily Water Temperature\nDefinition\nWater temperature is the temperature of the water. NEON’s 30-minute time resolution from deployed water temperature sondes in the freshwater sites reports this in degrees Celsius (°C). We have adapted the available NEON water temperature data to output the mean daily water temperature in °C from temperature thermisters deployed 0-1m below the water surface at the lake sites and a water temperature sonde deployed in the stream sites. Where multiple depths have observations within this depth range an average was taken. Common water temperatures in lakes and streams range between 4 and 35 °C.\nMotivation\nIn streams and rivers, forecasting water temperature can be meaningful for protecting aquatic communities while maintaining socio-economic benefits (Ouellet-Proulx et al. 2017). In lentic and lotic systems, successfully forecasting water temperatures can be important for management of fisheries and water utilities that rely on specific threshold temperatures (Zhu et al. 2020). Recently, lake temperature forecasts have been used to predict seasonal turnover, mixing bottom nutrients into the surface and impairing water quality.\n\n\n1.3.3 Chlorophyll-a\nDefinition\nchlorophyll-a (chla) is the concentration of chlorophyll-a in the water column, as measured using florescence. NEON’s 30-minute time resolution from deployed water quality sondes among the freshwater sites reports this concentration as mg L-1. We have adapted the available NEON chla data to output the mean daily chla concentration in mg L-1 from a water quality sonde deployed in the top 1 m of the water column at a lake sites and water quality sondes deployed in the non-wadeable river sites (BLWA, FLNT, TOMB). No ongoing measurements of chla are available in the wadeable streams and therefore cannot be forecasted in this challenge.\nMotivation\nPhytoplankton biomass are the base of the aquatic food-web and an important indicator of water quality for managers.\n\n\n1.3.4 Focal sites\nInformation on the sites can be found here:\n\nsite_data <- readr::read_csv(\"https://raw.githubusercontent.com/eco4cast/neon4cast-targets/main/NEON_Field_Site_Metadata_20220412.csv\") |> \n  dplyr::filter(aquatics == 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsiteID\nsite name\nwaterbody type\nlatitude\nlongtitude\nNEON site URL\n\n\n\n\nARIK\nArikaree River NEON\nWadeable Stream\n39.75821\n-102.44715\nhttps://www.neonscience.org/field-sites/arik\n\n\nBARC\nLake Barco NEON\nLake\n29.67598\n-82.00841\nhttps://www.neonscience.org/field-sites/barc\n\n\nBLWA\nBlack Warrior River NEON\nNon-wadeable River\n32.54153\n-87.79815\nhttps://www.neonscience.org/field-sites/blwa\n\n\nCOMO\nComo Creek NEON\nWadeable Stream\n40.03496\n-105.54416\nhttps://www.neonscience.org/field-sites/como\n\n\nCRAM\nCrampton Lake NEON\nLake\n46.20967\n-89.47369\nhttps://www.neonscience.org/field-sites/cram\n\n\nFLNT\nFlint River NEON\nNon-wadeable River\n31.18542\n-84.43740\nhttps://www.neonscience.org/field-sites/flnt\n\n\nHOPB\nLower Hop Brook NEON\nWadeable Stream\n42.47194\n-72.32953\nhttps://www.neonscience.org/field-sites/hopb\n\n\nKING\nKings Creek NEON\nWadeable Stream\n39.10506\n-96.60383\nhttps://www.neonscience.org/field-sites/king\n\n\nLECO\nLeConte Creek NEON\nWadeable Stream\n35.69043\n-83.50379\nhttps://www.neonscience.org/field-sites/leco\n\n\nLEWI\nLewis Run NEON\nWadeable Stream\n39.09564\n-77.98322\nhttps://www.neonscience.org/field-sites/lewi\n\n\nLIRO\nLittle Rock Lake NEON\nLake\n45.99827\n-89.70477\nhttps://www.neonscience.org/field-sites/liro\n\n\nMAYF\nMayfield Creek NEON\nWadeable Stream\n32.96037\n-87.40769\nhttps://www.neonscience.org/field-sites/mayf\n\n\nMCDI\nMcDiffett Creek NEON\nWadeable Stream\n38.94586\n-96.44302\nhttps://www.neonscience.org/field-sites/mcdi\n\n\nMCRA\nMcRae Creek NEON\nWadeable Stream\n44.25960\n-122.16555\nhttps://www.neonscience.org/field-sites/mcra\n\n\nPOSE\nPosey Creek NEON\nWadeable Stream\n38.89431\n-78.14726\nhttps://www.neonscience.org/field-sites/pose\n\n\nPRIN\nPringle Creek NEON\nWadeable Stream\n33.37852\n-97.78231\nhttps://www.neonscience.org/field-sites/prin\n\n\nPRLA\nPrairie Lake NEON\nLake\n47.15909\n-99.11388\nhttps://www.neonscience.org/field-sites/prla\n\n\nPRPO\nPrairie Pothole NEON\nLake\n47.12984\n-99.25315\nhttps://www.neonscience.org/field-sites/prpo\n\n\nSUGG\nLake Suggs NEON\nLake\n29.68778\n-82.01775\nhttps://www.neonscience.org/field-sites/sugg\n\n\nTOMB\nLower Tombigbee River NEON\nNon-wadeable River\n31.85343\n-88.15887\nhttps://www.neonscience.org/field-sites/tomb\n\n\nTOOK\nToolik Lake NEON\nLake\n68.63069\n-149.61064\nhttps://www.neonscience.org/field-sites/took\n\n\nWALK\nWalker Branch NEON\nWadeable Stream\n35.95738\n-84.27925\nhttps://www.neonscience.org/field-sites/walk\n\n\nWLOU\nWest St Louis Creek NEON\nWadeable Stream\n39.89137\n-105.91540\nhttps://www.neonscience.org/field-sites/wlou"
  },
  {
    "objectID": "Aquatics.html#timeline",
    "href": "Aquatics.html#timeline",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.4 Timeline",
    "text": "1.4 Timeline\nForecasts for a minimum of 35 days can be submitted daily by 11:59 pm UTC throughout 2022. A minimum of 35 days in the future must be forecasted for each submission. For example, a forecast submitted on February 1 should be for at least February 1st – March 7th. New forecasts can be submitted daily as new weather forecasts and observations (e.g., new temperature and water quality data is released by NEON) become available. The key is that submissions are predictions of the future.\nSince daily submissions are allowed and encouraged, the automation of forecast generation may be ideal. There are many ways to automate scripts that are written to download observations and meteorology drivers, generate forecasts, and submit forecasts. Two tools that many have used are cron jobs (see the R package cronR) that execute tasks at user specified times and github actions. See more at Chapter 15\nCron jobs work on unix and mac systems. An example of a script that executes a cron job using R can be found here."
  },
  {
    "objectID": "Aquatics.html#observed-data-latency",
    "href": "Aquatics.html#observed-data-latency",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.5 Observed data latency",
    "text": "1.5 Observed data latency\nThrough a collaboration with NEON, the new data will be available within 24-28 hrs of being collected for use in model training and forecast evaluation"
  },
  {
    "objectID": "Aquatics.html#submissions",
    "href": "Aquatics.html#submissions",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.6 Submissions",
    "text": "1.6 Submissions\nThe required names for forecasted variables: oxygen, temperature, and chla.\nThe required time unit: date for daily forecast in YYYY-MM-DD\nInstructions for submitting forecasts are found here: Chapter 7"
  },
  {
    "objectID": "Aquatics.html#meterological-inputs-for-modeling",
    "href": "Aquatics.html#meterological-inputs-for-modeling",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.7 Meterological inputs for modeling",
    "text": "1.7 Meterological inputs for modeling\nInformation about forecasted meteorology that is available for you to use when generating your forecasts can be found here: Chapter 10"
  },
  {
    "objectID": "Aquatics.html#useful-functions",
    "href": "Aquatics.html#useful-functions",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.8 Useful functions",
    "text": "1.8 Useful functions\nFunctions for validating, evaluating and submitting forecasts can be found here: Chapter 13"
  },
  {
    "objectID": "Aquatics.html#null-models",
    "href": "Aquatics.html#null-models",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.9 Null models",
    "text": "1.9 Null models\nA climatology null model is automatically generated each day to served as a simple baseline model. This climatology null model forecasts that the nee or lee will be equal to the historical mean of that day of year.\nCode for the climatology null model can be found here"
  },
  {
    "objectID": "Aquatics.html#faq",
    "href": "Aquatics.html#faq",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.10 FAQ",
    "text": "1.10 FAQ\nAnswers to frequency asks questions can be found here: Chapter 15"
  },
  {
    "objectID": "Aquatics.html#design-team",
    "href": "Aquatics.html#design-team",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.11 Design Team",
    "text": "1.11 Design Team\nFreya Olsson, Virginia Tech\nJames Guinnip, Kansas State University\nSarah Burnet, University of Idaho\nRyan McClure, Virginia Tech\nChris Brown, National Oceanic and Atmospheric Administration\nCayelan Carey, Virginia Tech\nWhitney Woelmer, Virginia Tech\nJake Zwart, United States Geological Survey"
  },
  {
    "objectID": "Aquatics.html#partners",
    "href": "Aquatics.html#partners",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.12 Partners",
    "text": "1.12 Partners\nThe challenge is hosted by the Ecological Forecasting Initiative (EFI; https://ecoforecast.org/) and its U.S. National Science Foundation sponsored Research Coordination Network (EFI-RCN; https://ecoforecast.org/rcn/).\nData used in the challenge are from the National Ecological Observatory Network (NEON): https://www.neonscience.org/.\nScientists from NOAA and USGS have been involved in the design of the challenge."
  },
  {
    "objectID": "Aquatics.html#references",
    "href": "Aquatics.html#references",
    "title": "1  Theme: Aquatic Ecosystems",
    "section": "1.13 References",
    "text": "1.13 References\nOuellet-Proulx, S., St-Hilaire, A., and Bouchar, M.-A.. 2017. Water temperature ensemble forecasts: Implementation using the CEQUEAU model on two contrasted river systems. Water 9(7):457. https://doi.org/10.3390/w9070457\nZhu, S., Ptak, M., Yaseen, Z.M., Dai, J. and Sivakumar, B. 2020. Forecasting surface water temperature in lakes: a comparison of approaches. Journal of Hydrology 585, 124809. https://doi.org/10.1016/j.jhydrol.2020.124809"
  },
  {
    "objectID": "Terrestrial.html",
    "href": "Terrestrial.html",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "",
    "text": "What: Net ecosystem exchange of CO2 and evapotranspiration in terrestrial ecosystems\nWhere: 10 NEON sites across the conterminous U.S.\nWhen: Daily forecasts for 35-days in the future. Forecast submissions are accepted daily throughout 2022. The only requirement is that submissions are predictions of the future at the time the forecast is submitted.\nWhy: Carbon and water cycling are fundamental for climate and water regulation services provided by ecosystems\nWho: Open to any individual or team that registers\nHow: REGISTER your team and submit forecast. If you registered for the Round 1 (2021) and are using the same team and method then you do not need to re-register.\nThe video below is an overview of the Terrestrial Carbon and Water Fluxes Challenge that was recorded for the 2021 Early Career Annual Meeting\nWe held a Q&A session on January 22, 2021. You can find a recording from that session HERE."
  },
  {
    "objectID": "Terrestrial.html#overview",
    "href": "Terrestrial.html#overview",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.1 Overview",
    "text": "2.1 Overview\nThe exchange of water and carbon dioxide between the atmosphere and the land is akin to earth’s terrestrial ecosystems breathing rate and lung capacity. One of the best ways to monitor changes in the amount of carbon and water in an ecosystem is the eddy-covariance method. This method observes the net amount of carbon and water entering and exiting ecosystems at half-hourly timesteps, which is important because it can provide information on ecosystem processes such as photosynthesis, respiration, and transpiration, their sensitivities to ongoing climate and land use change, and greenhouse gas budgets for carbon accounting and natural climate solutions. Forecasts of carbon uptake and release along with water use can provide insights into future production of food, fiber, timber, and carbon credits. Additionally, forecasts will highlight the influence that stress and disturbance have on carbon and water cycling."
  },
  {
    "objectID": "Terrestrial.html#challenge",
    "href": "Terrestrial.html#challenge",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.2 Challenge",
    "text": "2.2 Challenge\nThis forecasting challenge asks teams to forecast net ecosystem exchange of carbon dioxide (NEE) and latent heat flux of evapotranspiration (LE) across 10 NEON sites with differing climates. Forecasts can be submitted the 30-minute and/or daily time step over the next 35-days. Weather forecasts from NOAA Global Ensemble Forecast System are provided to use as model drivers (if forecasting model uses meteorological inputs). Forecasts can be submitted each day in 2022.\nTeams are asked to submit their forecast of measured NEON NEE and LE, along with uncertainty estimates and metadata. Any existing NEE and LE may be used to build and improve the models used to generate forecasts. Other data can be used so long as they are not from the month being forecast and the data are made publicly available (minimum of URL, but ideally a script) and accessible to all teams in the challenge."
  },
  {
    "objectID": "Terrestrial.html#data-targets",
    "href": "Terrestrial.html#data-targets",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.3 Data: Targets",
    "text": "2.3 Data: Targets\nThe challenge uses the following NEON data products:\nDP4.00200.001: Bundled data products - eddy covariance\nA file with previously released NEON data that has been processed into “targets” is provided below. The same processing will be applied to new data that are used for forecast evaluation. A processing script is available on the neon4cast-terrestrial GitHub repository.\n\n2.3.1 Net ecosystem exchange\nDefinition\nNet ecosystem exchange (NEE) is the net movement of carbon dioxide from the atmosphere to the ecosystem. At the 30-minute time resolution it is reported as \\(\\mu\\)mol CO2 m-2 s-1. At the daily time resolution it is reported as g C m-2 day-1. Negative values correspond to an ecosystem absorbing CO2 from the atmosphere, positive values correspond to an ecosystem emitting CO2 to the atmosphere.\nMotivation\nNEE quantifies the net exchange of CO2 between the ecosystem and the atmosphere over that 30-minute or daily time period. Assessing skill at predicting 1/2 hourly - sub daily measurements provides more insight into ability to capture diel processes. The diel curve contains information on how plants and soil immediately respond to variations in meteorology.\nMaking daily predictions will allow us to rapidly assess skill and provide information in a timeframe pertinent to inform and implement natural resource management. It also allows for models that do not produce sub-daily estimates to participate\n\n\n2.3.2 Latent heat flux\nDefinition\nLatent heat flux is the movement of water as water vapor from the ecosystem to the atmosphere. It is reported as W m-2 (equivalent to J m-2 s-1). At the daily time resolution it is reported as mean W m-2. Positive values correspond to a transfer of water vapor from the ecosystem to the atmosphere.\nMotivation\nLatent heat measures the water loss from an ecosystem to the atmosphere through evapotranspiration (transpiration through plants + evaporation from surfaces).\nForecasting latent heat (evapotranspiration) can provide insights to water stress for plants and the efficiency that plants are using water relative to NEE, and to the amount of liquid water remaining in the soil for soil moisture forecasting\n\n\n2.3.3 Focal sites\nInformation on the sites can be found here:\n\nsite_data <- readr::read_csv(\"https://raw.githubusercontent.com/eco4cast/neon4cast-targets/main/NEON_Field_Site_Metadata_20220412.csv\") |> \n  dplyr::filter(terrestrial == 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsiteID\nsite name\nvegetation type\nlatitude\nlongtitude\nNEON site URL\n\n\n\n\nABBY\nAbby Road NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n45.76244\n-122.33032\nhttps://www.neonscience.org/field-sites/abby\n\n\nBARR\nUtqiaġvik NEON\nEmergent Herbaceous Wetlands\n71.28241\n-156.61936\nhttps://www.neonscience.org/field-sites/barr\n\n\nBART\nBartlett Experimental Forest NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest\n44.06389\n-71.28737\nhttps://www.neonscience.org/field-sites/bart\n\n\nBLAN\nBlandy Experimental Farm NEON\nDeciduous Forest|Pasture/Hay\n39.03370\n-78.04179\nhttps://www.neonscience.org/field-sites/blan\n\n\nBONA\nCaribou-Poker Creeks Research Watershed NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n65.15401\n-147.50258\nhttps://www.neonscience.org/field-sites/bona\n\n\nCLBJ\nLyndon B. Johnson National Grassland NEON\nDeciduous Forest|Grassland/Herbaceous\n33.40123\n-97.57000\nhttps://www.neonscience.org/field-sites/clbj\n\n\nCPER\nCentral Plains Experimental Range NEON\nGrassland/Herbaceous\n40.81554\n-104.74559\nhttps://www.neonscience.org/field-sites/cper\n\n\nDCFS\nDakota Coteau Field Site NEON\nGrassland/Herbaceous\n47.16165\n-99.10656\nhttps://www.neonscience.org/field-sites/dcfs\n\n\nDEJU\nDelta Junction NEON\nEvergreen Forest|Shrub/Scrub|Woody Wetlands\n63.88112\n-145.75136\nhttps://www.neonscience.org/field-sites/deju\n\n\nDELA\nDead Lake NEON\nEvergreen Forest|Woody Wetlands\n32.54173\n-87.80388\nhttps://www.neonscience.org/field-sites/dela\n\n\nDSNY\nDisney Wilderness Preserve NEON\nPasture/Hay|Woody Wetlands\n28.12505\n-81.43619\nhttps://www.neonscience.org/field-sites/dsny\n\n\nGRSM\nGreat Smoky Mountains National Park NEON\nDeciduous Forest|Evergreen Forest\n35.68896\n-83.50195\nhttps://www.neonscience.org/field-sites/grsm\n\n\nGUAN\nGuanica Forest NEON\nEvergreen Forest\n17.96955\n-66.86870\nhttps://www.neonscience.org/field-sites/guan\n\n\nHARV\nHarvard Forest & Quabbin Watershed NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n42.53691\n-72.17265\nhttps://www.neonscience.org/field-sites/harv\n\n\nHEAL\nHealy NEON\nDwarf Scrub|Evergreen Forest|Shrub/Scrub\n63.87580\n-149.21335\nhttps://www.neonscience.org/field-sites/heal\n\n\nJERC\nThe Jones Center At Ichauway NEON\nCultivated Crops|Deciduous Forest|Evergreen Forest|Mixed Forest\n31.19484\n-84.46862\nhttps://www.neonscience.org/field-sites/jerc\n\n\nJORN\nJornada Experimental Range NEON\nShrub/Scrub\n32.59069\n-106.84254\nhttps://www.neonscience.org/field-sites/jorn\n\n\nKONA\nKonza Prairie Agroecosystem NEON\nCultivated Crops\n39.11045\n-96.61293\nhttps://www.neonscience.org/field-sites/kona\n\n\nKONZ\nKonza Prairie Biological Station NEON\nDeciduous Forest|Grassland/Herbaceous\n39.10077\n-96.56307\nhttps://www.neonscience.org/field-sites/konz\n\n\nLAJA\nLajas Experimental Station NEON\nCultivated Crops|Grassland/Herbaceous|Pasture/Hay\n18.02126\n-67.07689\nhttps://www.neonscience.org/field-sites/laja\n\n\nLENO\nLenoir Landing NEON\nDeciduous Forest|Woody Wetlands\n31.85386\n-88.16118\nhttps://www.neonscience.org/field-sites/leno\n\n\nMLBS\nMountain Lake Biological Station NEON\nDeciduous Forest\n37.37831\n-80.52485\nhttps://www.neonscience.org/field-sites/mlbs\n\n\nMOAB\nMoab NEON\nEvergreen Forest|Shrub/Scrub\n38.24828\n-109.38827\nhttps://www.neonscience.org/field-sites/moab\n\n\nNIWO\nNiwot Ridge NEON\nEvergreen Forest|Grassland/Herbaceous\n40.05425\n-105.58237\nhttps://www.neonscience.org/field-sites/niwo\n\n\nNOGP\nNorthern Great Plains Research Laboratory NEON\nGrassland/Herbaceous\n46.76972\n-100.91535\nhttps://www.neonscience.org/field-sites/nogp\n\n\nOAES\nMarvin Klemme Range Research Station NEON\nGrassland/Herbaceous|Shrub/Scrub\n35.41060\n-99.05878\nhttps://www.neonscience.org/field-sites/oaes\n\n\nONAQ\nOnaqui NEON\nEvergreen Forest|Shrub/Scrub\n40.17760\n-112.45245\nhttps://www.neonscience.org/field-sites/onaq\n\n\nORNL\nOak Ridge NEON\nDeciduous Forest|Evergreen Forest|Pasture/Hay\n35.96413\n-84.28259\nhttps://www.neonscience.org/field-sites/ornl\n\n\nOSBS\nOrdway-Swisher Biological Station NEON\nEmergent Herbaceous Wetlands|Evergreen Forest|Woody Wetlands\n29.68928\n-81.99343\nhttps://www.neonscience.org/field-sites/osbs\n\n\nPUUM\nPu’u Maka’ala Natural Area Reserve NEON\nEvergreen Forest\n19.55309\n-155.31731\nhttps://www.neonscience.org/field-sites/puum\n\n\nRMNP\nRocky Mountains NEON\nEvergreen Forest\n40.27590\n-105.54596\nhttps://www.neonscience.org/field-sites/rmnp\n\n\nSCBI\nSmithsonian Conservation Biology Institute NEON\nDeciduous Forest|Evergreen Forest|Pasture/Hay\n38.89292\n-78.13949\nhttps://www.neonscience.org/field-sites/scbi\n\n\nSERC\nSmithsonian Environmental Research Center NEON\nCultivated Crops|Deciduous Forest\n38.89013\n-76.56001\nhttps://www.neonscience.org/field-sites/serc\n\n\nSJER\nSan Joaquin Experimental Range NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n37.10878\n-119.73228\nhttps://www.neonscience.org/field-sites/sjer\n\n\nSOAP\nSoaproot Saddle NEON\nEvergreen Forest|Shrub/Scrub\n37.03337\n-119.26219\nhttps://www.neonscience.org/field-sites/soap\n\n\nSRER\nSanta Rita Experimental Range NEON\nShrub/Scrub\n31.91068\n-110.83549\nhttps://www.neonscience.org/field-sites/srer\n\n\nSTEI\nSteigerwaldt-Chequamegon NEON\nDeciduous Forest|Mixed Forest|Woody Wetlands\n45.50894\n-89.58637\nhttps://www.neonscience.org/field-sites/stei\n\n\nSTER\nNorth Sterling NEON\nCultivated Crops\n40.46189\n-103.02929\nhttps://www.neonscience.org/field-sites/ster\n\n\nTALL\nTalladega National Forest NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest\n32.95047\n-87.39326\nhttps://www.neonscience.org/field-sites/tall\n\n\nTEAK\nLower Teakettle NEON\nEvergreen Forest|Shrub/Scrub\n37.00583\n-119.00602\nhttps://www.neonscience.org/field-sites/teak\n\n\nTOOL\nToolik Field Station NEON\nDwarf Scrub|Shrub/Scrub\n68.66109\n-149.37047\nhttps://www.neonscience.org/field-sites/tool\n\n\nTREE\nTreehaven NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n45.49369\n-89.58571\nhttps://www.neonscience.org/field-sites/tree\n\n\nUKFS\nUniversity of Kansas Field Station NEON\nDeciduous Forest|Pasture/Hay\n39.04043\n-95.19215\nhttps://www.neonscience.org/field-sites/ukfs\n\n\nUNDE\nUniversity of Notre Dame Environmental Research Center NEON\nDeciduous Forest|Mixed Forest|Woody Wetlands\n46.23391\n-89.53725\nhttps://www.neonscience.org/field-sites/unde\n\n\nWOOD\nChase Lake National Wildlife Refuge NEON\nEmergent Herbaceous Wetlands|Grassland/Herbaceous\n47.12820\n-99.24133\nhttps://www.neonscience.org/field-sites/wood\n\n\nWREF\nWind River Experimental Forest NEON\nEvergreen Forest\n45.82049\n-121.95191\nhttps://www.neonscience.org/field-sites/wref\n\n\nYELL\nYellowstone National Park NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n44.95348\n-110.53914\nhttps://www.neonscience.org/field-sites/yell\n\n\n\n\n\n\n\n2.3.4 30-minute target data calculation\nTo create the data for evaluation (and training) for NEE and LE we extract NEE and LE that pass the turbulence quality control flags (qfqm.fluxCo2.turb.qfFinl = 0 ) provided by NEON and has flux values between -50 and 50 umol CO2 m-2 s-1.\nThe table with the half-hour NEE and LE has the following columns\n\ntime: YYYY-MM-DD HH:MM for the start of the 30-minute period in UTC\n\nsite_id: NEON site code (e.g., BART)\n\nvariable: nee (umol CO2 m-2 s-1) or le W m-2\n\nobserved: value for variable\nsd_intercept: intercept in the nee observation uncertainty standard deviation\n\nsd_slopeP: slope in the relationship between nee and observation uncertainty standard deviation for positive values of nee\n\nsd_slopeN: slope in the relationship between nee and observation uncertainty standard deviation for negative values of variable\n\nThe observation uncertainty estimates for nee and le are derived from the PEcAN project and can be used by sd <- sd_intercept + sd_slopeP * observed. They are not supplied by NEON.\nHere is the download link and format of the terrestrial_30min target file:\n\nreadr::read_csv(\"https://data.ecoforecast.org/neon4cast-targets/terrestrial_30min/terrestrial_30min-targets.csv.gz\", guess_max = 1e6)\n\n# A tibble: 1,933,040 × 7\n   time                site_id variable observed sd_intercept sd_slopeP sd_slo…¹\n   <dttm>              <chr>   <chr>       <dbl>        <dbl>     <dbl>    <dbl>\n 1 2017-02-01 10:00:00 BART    nee        -0.574         1.14     0.206   -0.131\n 2 2017-02-01 10:30:00 BART    nee         0.297         1.14     0.206   -0.131\n 3 2017-02-01 11:00:00 BART    nee        NA             1.14     0.206   -0.131\n 4 2017-02-01 11:30:00 BART    nee        NA             1.14     0.206   -0.131\n 5 2017-02-01 12:00:00 BART    nee         0.224         1.14     0.206   -0.131\n 6 2017-02-01 12:30:00 BART    nee         2.12          1.14     0.206   -0.131\n 7 2017-02-01 13:00:00 BART    nee         2.18          1.14     0.206   -0.131\n 8 2017-02-01 13:30:00 BART    nee        NA             1.14     0.206   -0.131\n 9 2017-02-01 14:00:00 BART    nee        NA             1.14     0.206   -0.131\n10 2017-02-01 14:30:00 BART    nee        NA             1.14     0.206   -0.131\n# … with 1,933,030 more rows, and abbreviated variable name ¹​sd_slopeN\n# ℹ Use `print(n = ...)` to see more rows\n\n\nThe code used to generate the targets from NEON data can be found here\n\n\n2.3.5 Daily target data calculation\nTo evaluate the models that produce daily flux forecasts, we select only days with at least 24 of 48 half hours that pass the quality control flags. For these days, we average the half-hours and convert carbon to daily units (gC/m2/day). The daily data table has the following columns.\n\ntime: YYYY-MM-DD (the day is determined using UTC time)\n\nsite_id: NEON site code (e.g., BART)\n\nvariable: nee (g C m-2 day-1) or le (W m-2)\nobserved: value for variable\n\nHere is the download link and format of the terrestrial_daily target file\n\nreadr::read_csv(\"https://data.ecoforecast.org/neon4cast-targets/terrestrial_daily/terrestrial_daily-targets.csv.gz\", guess_max = 1e6) |> \n  na.omit()\n\n# A tibble: 18,906 × 4\n   time       site_id variable observed\n   <date>     <chr>   <chr>       <dbl>\n 1 2017-02-02 BART    le          2.71 \n 2 2017-02-02 BART    nee         0.580\n 3 2017-02-03 BART    le          8.47 \n 4 2017-02-03 BART    nee         0.687\n 5 2017-02-04 BART    le          6.64 \n 6 2017-02-04 BART    nee         0.693\n 7 2017-02-05 BART    le          3.53 \n 8 2017-02-05 BART    nee         0.912\n 9 2017-02-06 BART    le         11.5  \n10 2017-02-06 BART    nee         0.965\n# … with 18,896 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\nThe code used to generate the targets from NEON data can be found here"
  },
  {
    "objectID": "Terrestrial.html#timeline",
    "href": "Terrestrial.html#timeline",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.4 Timeline",
    "text": "2.4 Timeline\nForecasts for a minimum of 35 days can be submitted daily by 6 pm ET throughout 2022. A minimum of 35 days in the future must be forecasted for each submission. For example, a forecast submitted on February 1 should be for at least February 1st – March 7th, but it could be for the full spring. New forecasts can be submitted daily as new weather forecasts and observations (e.g., NEE) become available. Processed NEE and LE data will be available daily by 11:59 pm ET for each day. The key is that submissions are predictions of the future.\nDaily submissions are allowed and encouraged as new observations and weather forecasts become available, therefore the automation of forecast generation may be ideal. There are many ways to automate scripts that are written to download observations and metreology drivers, generate forecasts, and submit forecasts. Two tools that many have used are cron jobs (see the R package cronR) that execute tasks at user specifics times and github actions. See more in Chapter 15\nCron jobs work on unix and mac systems. An example of a script that executes a cron job using R can be found here."
  },
  {
    "objectID": "Terrestrial.html#flux-data-latency",
    "href": "Terrestrial.html#flux-data-latency",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.5 Flux data latency",
    "text": "2.5 Flux data latency\nNEON data officially releases the flux data on their data portal and API in monthly data packages. Data for a given month is scheduled to be released around the 15th of the following month.\nNEON is also processing flux data with only a 5 day delay (latency). Any data that has been processed but not included in a released monthly package is available on NEON s3 storage. The list of files that can be downloaded can found here.\nOur targets file is the combination of NEON’s monthly releases and the files on the s3 bucket. As a result, flux data within 5-days of the restart of a forecast are available to inform the forecast.\nThe reduction of the latency from monthly to 5-days allows this theme to forecast in real-time - a major advancement for this forecasting challenge. Thank you NEON!"
  },
  {
    "objectID": "Terrestrial.html#submissions",
    "href": "Terrestrial.html#submissions",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.6 Submissions",
    "text": "2.6 Submissions\nThe required names for forecasted variables: nee, and le.\nThe required time unit: date for daily forecast in YYYY-MM-DD format and date-time for 30 minute forecasts in YYYY-MM-DD HH:MM:SS format\nInstructions for submitting forecasts are found in Chapter 7"
  },
  {
    "objectID": "Terrestrial.html#meterological-inputs-for-modeling",
    "href": "Terrestrial.html#meterological-inputs-for-modeling",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.7 Meterological inputs for modeling",
    "text": "2.7 Meterological inputs for modeling\nInformation about forecasted meteorology that is available for you to use when generating your forecasts can be found in Chapter 10"
  },
  {
    "objectID": "Terrestrial.html#useful-functions",
    "href": "Terrestrial.html#useful-functions",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.8 Useful functions",
    "text": "2.8 Useful functions\nFunctions for validating, evaluating and submitting forecasts can be found in Chapter 13\nFunctions for downloading and working with the meteorology forecasts can be be found Chapter 10"
  },
  {
    "objectID": "Terrestrial.html#null-models",
    "href": "Terrestrial.html#null-models",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.9 Null models",
    "text": "2.9 Null models\nTwo null models are automatically generated each day - these are simple baseline models. The persistence null model uses the most recent measurement of nee or le and predicts that the values will be constant in the future. The climatology null model forecasts that the nee or lee will be equal to the historical mean of that day of year. We apply both the persistence and climatology model to the daily fluxes and the climatology to the 30 minute fluxes\nCode for the daily persistence null model can be found here\nCode for the daily climatology null model can be found here\nCode for the 30 minute climatology null model can be found here"
  },
  {
    "objectID": "Terrestrial.html#faq",
    "href": "Terrestrial.html#faq",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.10 FAQ",
    "text": "2.10 FAQ\nAnswers to frequency asks questions can be found in Chapter 15"
  },
  {
    "objectID": "Terrestrial.html#design-team",
    "href": "Terrestrial.html#design-team",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.11 Design team",
    "text": "2.11 Design team\nGeorge Burba, LI-COR Biosciences\nJamie Cleverly, Terrestrial Ecosystem Research Network (TERN)\nAnkur Desai, University of Wisconsin, Madison\nMike Dietze, Boston University\nAndy Fox, Joint Center for Satellite Data Assimilation\nWilliam Hammond, Oklahoma State University\nDanica Lombardozzi, National Center for Atmospheric Research\nQuinn Thomas, Virginia Tech\nJody Peters, University of Notre Dame\nAlex Young, SUNY - College of Environmental Science & Forestry"
  },
  {
    "objectID": "Terrestrial.html#partners",
    "href": "Terrestrial.html#partners",
    "title": "2  Theme: Terrestrial Ecosystems",
    "section": "2.12 Partners",
    "text": "2.12 Partners\nData used in the challenge are from the National Ecological Observatory Network (NEON)\nAmeriflux is an excellent database of eddy-covariance data, including historical data for some of the four challenge sites.\nTerrestrial Ecosystem Research Network (TERN) has been involved in the design of the challenge."
  },
  {
    "objectID": "Ticks.html",
    "href": "Ticks.html",
    "title": "3  Theme: Tick Populations",
    "section": "",
    "text": "What: Amblyomma americanum nymphal tick abundance per sampled area\nWhere: 9 NEON sites\nWhen: Weekly forecasts for 4 weeks into the future starting March 31-September 30, 2022. Forecasts are submitted monthly and later submissions after the March 31 start are permissible.\nWhy: There is a correlation between tick population abundance and disease incidence, meaning forecasts for tick abundance have the potential to aid in our understanding of disease risk through time and space.\nWho: Open to any individual or team that registers\nHow: REGISTER your team and submit forecast. If you registered for the Round 1 (2021) and are using the same team and method then you do not need to re-register.\nThe video below is an overview of the Tick Populations Challenge that was recorded for the 2021 Early Career Annual Meeting\nWe held a Q&A session on March 24, 2021. You can find a recording from that session HERE."
  },
  {
    "objectID": "Ticks.html#overview",
    "href": "Ticks.html#overview",
    "title": "3  Theme: Tick Populations",
    "section": "3.1 Overview",
    "text": "3.1 Overview\nTarget species for the population forecasts are Amblyomma americanum nymphal ticks. A. americanum is a vector of ehrlichiosis, tularemia, and southern tick-associated rash illness. The species is present in the eastern United States, and their populations are expanding. There is a correlation between tick population abundance and disease incidence, meaning forecasts for tick abundance have the potential to aid in our understanding of disease risk through time and space."
  },
  {
    "objectID": "Ticks.html#challenge",
    "href": "Ticks.html#challenge",
    "title": "3  Theme: Tick Populations",
    "section": "3.2 Challenge",
    "text": "3.2 Challenge\nThe challenge is open to any individual, group, or institution that may want to participate. The goals of this challenge are to forecast the density of Amblyomma americanum nymphs (ticks/1600m^2) each epidemiological week (Sun-Sat) at nine NEON sites. Due to the latency in the taxonomic data reported by NEON, the challenge will be for the 2021 field season.\nTeams must post information about any additional data they wish to use on the theme Slack channel so that other teams can potentially use the data as well."
  },
  {
    "objectID": "Ticks.html#data-targets",
    "href": "Ticks.html#data-targets",
    "title": "3  Theme: Tick Populations",
    "section": "3.3 Data: Targets",
    "text": "3.3 Data: Targets\nThe challenge uses the following NEON data products:\nDP1.10093.001: Ticks sampled using drag cloths\nA file with previously released NEON data that has been processed into “targets” is provided below. The same processing will be applied to new data that are used for forecast evaluation. This processing script is available in the neon4cast-ticks GitHub repository.\n\n3.3.1 Amblyomma americanum nymphs\nDefinition\nThe density of Amblyomma americanum nymphs per week. Density is defined as the total number of individuals caught in a week across the forested plots divided by the total area sampled in the forested plots during the week. Densities are presented as ticks per 1600m^2, as 1600m^2 is the size of an individual NEON tick plot.\nMotivation\nWe chose to use the density of Amblyomma americanum nymphs for several reasons. The first is that Amblyomma americanum is a vector of multiple pathogens, many of which cause human disease, and a forecast for their abundance could aid decisions in public health and personal protective measures. For simplicity, we chose to focus on one species for the abundance challenge, and the Amblyomma americanum nymphs are the most abundant tick observed in the NEON data. Most ticks are observed in to forested plots, and by standardizing the data to density of ticks observed per unit effort in the forested plots, we hope to avoid forecasters predicting sampling effort. We scaled the density to be representative of ticks per plot, which is more interpretable than ticks per square meter. Also, tick drags occur every three weeks. By having the challenge be for forecasting every week, participants won’t have to predict which weeks drags occur.\n\n\n3.3.2 Focal sites\nInformation on the sites can be found here:\n\nsite_data <- readr::read_csv(\"https://raw.githubusercontent.com/eco4cast/neon4cast-targets/main/NEON_Field_Site_Metadata_20220412.csv\") |> \n  dplyr::filter(ticks == 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsiteID\nsite name\nvegetation type\nlatitude\nlongtitude\nNEON site URL\n\n\n\n\nABBY\nAbby Road NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n45.76244\n-122.33032\nhttps://www.neonscience.org/field-sites/abby\n\n\nBARR\nUtqiaġvik NEON\nEmergent Herbaceous Wetlands\n71.28241\n-156.61936\nhttps://www.neonscience.org/field-sites/barr\n\n\nBART\nBartlett Experimental Forest NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest\n44.06389\n-71.28737\nhttps://www.neonscience.org/field-sites/bart\n\n\nBLAN\nBlandy Experimental Farm NEON\nDeciduous Forest|Pasture/Hay\n39.03370\n-78.04179\nhttps://www.neonscience.org/field-sites/blan\n\n\nBONA\nCaribou-Poker Creeks Research Watershed NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n65.15401\n-147.50258\nhttps://www.neonscience.org/field-sites/bona\n\n\nCLBJ\nLyndon B. Johnson National Grassland NEON\nDeciduous Forest|Grassland/Herbaceous\n33.40123\n-97.57000\nhttps://www.neonscience.org/field-sites/clbj\n\n\nCPER\nCentral Plains Experimental Range NEON\nGrassland/Herbaceous\n40.81554\n-104.74559\nhttps://www.neonscience.org/field-sites/cper\n\n\nDCFS\nDakota Coteau Field Site NEON\nGrassland/Herbaceous\n47.16165\n-99.10656\nhttps://www.neonscience.org/field-sites/dcfs\n\n\nDEJU\nDelta Junction NEON\nEvergreen Forest|Shrub/Scrub|Woody Wetlands\n63.88112\n-145.75136\nhttps://www.neonscience.org/field-sites/deju\n\n\nDELA\nDead Lake NEON\nEvergreen Forest|Woody Wetlands\n32.54173\n-87.80388\nhttps://www.neonscience.org/field-sites/dela\n\n\nDSNY\nDisney Wilderness Preserve NEON\nPasture/Hay|Woody Wetlands\n28.12505\n-81.43619\nhttps://www.neonscience.org/field-sites/dsny\n\n\nGRSM\nGreat Smoky Mountains National Park NEON\nDeciduous Forest|Evergreen Forest\n35.68896\n-83.50195\nhttps://www.neonscience.org/field-sites/grsm\n\n\nGUAN\nGuanica Forest NEON\nEvergreen Forest\n17.96955\n-66.86870\nhttps://www.neonscience.org/field-sites/guan\n\n\nHARV\nHarvard Forest & Quabbin Watershed NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n42.53691\n-72.17265\nhttps://www.neonscience.org/field-sites/harv\n\n\nHEAL\nHealy NEON\nDwarf Scrub|Evergreen Forest|Shrub/Scrub\n63.87580\n-149.21335\nhttps://www.neonscience.org/field-sites/heal\n\n\nJERC\nThe Jones Center At Ichauway NEON\nCultivated Crops|Deciduous Forest|Evergreen Forest|Mixed Forest\n31.19484\n-84.46862\nhttps://www.neonscience.org/field-sites/jerc\n\n\nJORN\nJornada Experimental Range NEON\nShrub/Scrub\n32.59069\n-106.84254\nhttps://www.neonscience.org/field-sites/jorn\n\n\nKONA\nKonza Prairie Agroecosystem NEON\nCultivated Crops\n39.11045\n-96.61293\nhttps://www.neonscience.org/field-sites/kona\n\n\nKONZ\nKonza Prairie Biological Station NEON\nDeciduous Forest|Grassland/Herbaceous\n39.10077\n-96.56307\nhttps://www.neonscience.org/field-sites/konz\n\n\nLAJA\nLajas Experimental Station NEON\nCultivated Crops|Grassland/Herbaceous|Pasture/Hay\n18.02126\n-67.07689\nhttps://www.neonscience.org/field-sites/laja\n\n\nLENO\nLenoir Landing NEON\nDeciduous Forest|Woody Wetlands\n31.85386\n-88.16118\nhttps://www.neonscience.org/field-sites/leno\n\n\nMLBS\nMountain Lake Biological Station NEON\nDeciduous Forest\n37.37831\n-80.52485\nhttps://www.neonscience.org/field-sites/mlbs\n\n\nMOAB\nMoab NEON\nEvergreen Forest|Shrub/Scrub\n38.24828\n-109.38827\nhttps://www.neonscience.org/field-sites/moab\n\n\nNIWO\nNiwot Ridge NEON\nEvergreen Forest|Grassland/Herbaceous\n40.05425\n-105.58237\nhttps://www.neonscience.org/field-sites/niwo\n\n\nNOGP\nNorthern Great Plains Research Laboratory NEON\nGrassland/Herbaceous\n46.76972\n-100.91535\nhttps://www.neonscience.org/field-sites/nogp\n\n\nOAES\nMarvin Klemme Range Research Station NEON\nGrassland/Herbaceous|Shrub/Scrub\n35.41060\n-99.05878\nhttps://www.neonscience.org/field-sites/oaes\n\n\nONAQ\nOnaqui NEON\nEvergreen Forest|Shrub/Scrub\n40.17760\n-112.45245\nhttps://www.neonscience.org/field-sites/onaq\n\n\nORNL\nOak Ridge NEON\nDeciduous Forest|Evergreen Forest|Pasture/Hay\n35.96413\n-84.28259\nhttps://www.neonscience.org/field-sites/ornl\n\n\nOSBS\nOrdway-Swisher Biological Station NEON\nEmergent Herbaceous Wetlands|Evergreen Forest|Woody Wetlands\n29.68928\n-81.99343\nhttps://www.neonscience.org/field-sites/osbs\n\n\nPUUM\nPu’u Maka’ala Natural Area Reserve NEON\nEvergreen Forest\n19.55309\n-155.31731\nhttps://www.neonscience.org/field-sites/puum\n\n\nRMNP\nRocky Mountains NEON\nEvergreen Forest\n40.27590\n-105.54596\nhttps://www.neonscience.org/field-sites/rmnp\n\n\nSCBI\nSmithsonian Conservation Biology Institute NEON\nDeciduous Forest|Evergreen Forest|Pasture/Hay\n38.89292\n-78.13949\nhttps://www.neonscience.org/field-sites/scbi\n\n\nSERC\nSmithsonian Environmental Research Center NEON\nCultivated Crops|Deciduous Forest\n38.89013\n-76.56001\nhttps://www.neonscience.org/field-sites/serc\n\n\nSJER\nSan Joaquin Experimental Range NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n37.10878\n-119.73228\nhttps://www.neonscience.org/field-sites/sjer\n\n\nSOAP\nSoaproot Saddle NEON\nEvergreen Forest|Shrub/Scrub\n37.03337\n-119.26219\nhttps://www.neonscience.org/field-sites/soap\n\n\nSRER\nSanta Rita Experimental Range NEON\nShrub/Scrub\n31.91068\n-110.83549\nhttps://www.neonscience.org/field-sites/srer\n\n\nSTEI\nSteigerwaldt-Chequamegon NEON\nDeciduous Forest|Mixed Forest|Woody Wetlands\n45.50894\n-89.58637\nhttps://www.neonscience.org/field-sites/stei\n\n\nSTER\nNorth Sterling NEON\nCultivated Crops\n40.46189\n-103.02929\nhttps://www.neonscience.org/field-sites/ster\n\n\nTALL\nTalladega National Forest NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest\n32.95047\n-87.39326\nhttps://www.neonscience.org/field-sites/tall\n\n\nTEAK\nLower Teakettle NEON\nEvergreen Forest|Shrub/Scrub\n37.00583\n-119.00602\nhttps://www.neonscience.org/field-sites/teak\n\n\nTOOL\nToolik Field Station NEON\nDwarf Scrub|Shrub/Scrub\n68.66109\n-149.37047\nhttps://www.neonscience.org/field-sites/tool\n\n\nTREE\nTreehaven NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n45.49369\n-89.58571\nhttps://www.neonscience.org/field-sites/tree\n\n\nUKFS\nUniversity of Kansas Field Station NEON\nDeciduous Forest|Pasture/Hay\n39.04043\n-95.19215\nhttps://www.neonscience.org/field-sites/ukfs\n\n\nUNDE\nUniversity of Notre Dame Environmental Research Center NEON\nDeciduous Forest|Mixed Forest|Woody Wetlands\n46.23391\n-89.53725\nhttps://www.neonscience.org/field-sites/unde\n\n\nWOOD\nChase Lake National Wildlife Refuge NEON\nEmergent Herbaceous Wetlands|Grassland/Herbaceous\n47.12820\n-99.24133\nhttps://www.neonscience.org/field-sites/wood\n\n\nWREF\nWind River Experimental Forest NEON\nEvergreen Forest\n45.82049\n-121.95191\nhttps://www.neonscience.org/field-sites/wref\n\n\nYELL\nYellowstone National Park NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n44.95348\n-110.53914\nhttps://www.neonscience.org/field-sites/yell\n\n\n\n\n\n\n\n3.3.3 Target data calculation\nTick drags occur every three weeks at the NEON sites used in this challenge. The sampling season at each site is determined by phenological milestones, beginning and ending within two weeks of green-up and senescence, respectively. The 1m^2 cloth is dragged for 160m (and at least 80m), and ticks are collected intermittently. They are then sent to a lab for taxonomic identification. Ticks are then identified by life stage and taxonomic rank. The target data is for Amblyomma americanum nymphs that were identified to the species level; i.e. ticks identified as being in the Amblyomma genus are not included.\nUse of 2021 data: The forecasting challenge is for the 2021 field season, thus environmental covariates are known. However, in the spirit of keeping this as much of a “forecasting” challenge as possible, we ask that for four week forecast period teams use the NOAA GEFS forecasting data.\n\n\n3.3.4 Target file\nHere is the format of the target file\n\nreadr::read_csv(\"https://data.ecoforecast.org/neon4cast-targets/ticks/ticks-targets.csv.gz\", guess_max = 1e6)\n\n# A tibble: 531 × 5\n   time       site_id variable             observed mmwr_week\n   <date>     <chr>   <chr>                   <dbl>     <dbl>\n 1 2015-04-19 BLAN    amblyomma_americanum     0           16\n 2 2015-05-10 BLAN    amblyomma_americanum     9.82        19\n 3 2015-05-31 BLAN    amblyomma_americanum    10           22\n 4 2015-06-07 BLAN    amblyomma_americanum    19.4         23\n 5 2015-06-21 BLAN    amblyomma_americanum     3.14        25\n 6 2015-07-12 BLAN    amblyomma_americanum     3.66        28\n 7 2015-08-02 BLAN    amblyomma_americanum     0           31\n 8 2015-08-23 BLAN    amblyomma_americanum     0           34\n 9 2015-09-13 BLAN    amblyomma_americanum     0           37\n10 2015-10-11 BLAN    amblyomma_americanum     0           41\n# … with 521 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n\ntime: YYYY-MM-DD The first day (Sunday) of the MMWR week\nsite_id: Site where ticks are observed (HARV)\nvariable: amblyomma_americanum (density of Amblyomma americanum ticks; ticks / 1600m^2)\nobserved: value for variable\nmmwr_week: The MMWR week that starts on Sunday, consistent with CDC version of the epidemiological week"
  },
  {
    "objectID": "Ticks.html#timeline",
    "href": "Ticks.html#timeline",
    "title": "3  Theme: Tick Populations",
    "section": "3.4 Timeline",
    "text": "3.4 Timeline\nThe challenge will begin on March 31, 2022 at 11:59 PM Eastern Standard Time, and will run through October 31, 2022. Each forecast will be for the four MMWR weeks during that month.\nFor example, the forecast that is due on March 31, 2022 will be for MMWR weeks 10-13 of 2021 because the Sundays (the start of each MMWR week) in March 2021 correspond to MMWR weeks 10-13. Likewise, the forecast due April 30, 2022 will be for MMWR weeks 14-17 of 2021. A table of which weeks to forecast at each deadline can be found below.\nIt is unclear when the provisional 2021 tick taxonomic data will be released. If any is released during the challenge, teams will be able to use it if the data is for weeks that have already been forecasted. For example, if the provisional 2021 data is released on July 15, 2022, teams can use the 2021 data up to MMWR week 26 to calibrate their models for the forecasts due July 31, 2022.\n\n\n\n2022 Forecast Submission date\n2021 Target Epidemiological weeks\n\n\n\n\nMarch 31\n10-13\n\n\nApril 30\n14-17\n\n\nMay 31\n18-22\n\n\nJune 30\n23-26\n\n\nJuly 31\n27-30\n\n\nAugust 31\n31-35\n\n\nSeptember 31\n36-39\n\n\nOctober 31\n40-44"
  },
  {
    "objectID": "Ticks.html#submissions",
    "href": "Ticks.html#submissions",
    "title": "3  Theme: Tick Populations",
    "section": "3.5 Submissions",
    "text": "3.5 Submissions\nThe required names for forecasted variable: amblyomma_americanum\nThe required time unit: date for the first day (Sunday) of the MMWR week date in YYYY-MM-DD format.\nInstructions for submitting forecasts are found in Chapter 7"
  },
  {
    "objectID": "Ticks.html#meterological-inputs-for-modeling",
    "href": "Ticks.html#meterological-inputs-for-modeling",
    "title": "3  Theme: Tick Populations",
    "section": "3.6 Meterological inputs for modeling",
    "text": "3.6 Meterological inputs for modeling\nInformation about forecasted meteorology that is available for you to use when generating your forecasts can be found in Chapter 10"
  },
  {
    "objectID": "Ticks.html#useful-functions",
    "href": "Ticks.html#useful-functions",
    "title": "3  Theme: Tick Populations",
    "section": "3.7 Useful functions",
    "text": "3.7 Useful functions\nFunctions for validating, evaluating and submitting forecasts can be found in Chapter 13\nFunctions for downloading and working with the meteorology forecasts can be be found in Chapter 10"
  },
  {
    "objectID": "Ticks.html#null-models",
    "href": "Ticks.html#null-models",
    "title": "3  Theme: Tick Populations",
    "section": "3.8 Null models",
    "text": "3.8 Null models\nThe null model will be automatically generated each month, and is the historical mean for each week at each site. For weeks that don’t have observations, the forecast is a linear interpolation between the preceding and following weeks."
  },
  {
    "objectID": "Ticks.html#faq",
    "href": "Ticks.html#faq",
    "title": "3  Theme: Tick Populations",
    "section": "3.9 FAQ",
    "text": "3.9 FAQ\nAnswers to frequency asks questions can be found in Chapter 15"
  },
  {
    "objectID": "Ticks.html#design-team",
    "href": "Ticks.html#design-team",
    "title": "3  Theme: Tick Populations",
    "section": "3.10 Design team",
    "text": "3.10 Design team\nMatt Bitters, University of Colorado, Boulder\nMelissa Chen, University of Colorado, Boulder\nJohn Foster, Boston University\nLeah Johnson, Virginia Tech\nShannon LaDeau, Cary Institute of Ecosystem Studies\nCat Lippi, University of Florida\nBrett Melbourne, University of Colorado, Boulder\nWynne Moss, University of Colorado, Boulder\nSadie Ryan, University of Florida"
  },
  {
    "objectID": "Ticks.html#partners",
    "href": "Ticks.html#partners",
    "title": "3  Theme: Tick Populations",
    "section": "3.11 Partners",
    "text": "3.11 Partners\nData used in the challenge are collected by the National Ecological Observatory Network (NEON; https://www.neonscience.org/)."
  },
  {
    "objectID": "Phenology.html",
    "href": "Phenology.html",
    "title": "4  Theme: Phenology",
    "section": "",
    "text": "What: Terrestrial phenology defined by daily greenness and redness of plants\nWhere: 47 sites in total - 15 deciduous broadleaf forest, 11 evergreen needleleaf, 9 grassland, 5 tundra, 3 agriculture, 2 evergreen broadleaf (tropical) and 2 shrubland NEON sites across the U.S. and Puerto Rico\nWhen: Daily forecasts for at least 30-days in the future. Forecast submissions are accepted daily. The only requirement is that submissions are predictions of the future at the time the forecast is submitted.\nWhy: Phenology has been identified as one of the primary ecological fingerprints of global climate change.\nWho: Open to any individual or team that registers\nHow: REGISTER your team and submit forecast. If you registered for the Round 1 (2021) and are using the same team and method then you do not need to re-register.\nThe video below is an overview of the Phenology Challenge that was recorded for the 2021 Early Career Annual Meeting\nWe held a Q&A session on January 27, 2021. You can find a recording from that session HERE."
  },
  {
    "objectID": "Phenology.html#overview",
    "href": "Phenology.html#overview",
    "title": "4  Theme: Phenology",
    "section": "4.1 Overview",
    "text": "4.1 Overview\nPhenology has been shown to be a robust integrator of the effects of year-to-year climate variability and longer-term climate change on natural systems (e.g., recent warming trends). Experimental studies have shown how other global change factors (e.g., elevated CO2 and N deposition) can also influence phenology. There is a need to better document biological responses to a changing world, and improved phenological monitoring at scales from individual organisms to ecosystems, regions, and continents will contribute to achieving this goal.\nPhenology researchers often use digital cameras (such as those that are part of the PhenoCam Network) that take regular repeated images of plant canopies to monitor changes in greenness and redness throughout the year. The PhenoCam Network is a cooperative continental-scale phenological observatory that uses digital repeat photography to track vegetation phenology in a diverse range of ecosystems across North America and around the World. Imagery and data are made publicly available in near-real-time through the PhenoCam webpage: http://phenocam.sr.unh.edu/."
  },
  {
    "objectID": "Phenology.html#challenge",
    "href": "Phenology.html#challenge",
    "title": "4  Theme: Phenology",
    "section": "4.2 Challenge",
    "text": "4.2 Challenge\nThis is an open ecological forecasting challenge to forecast spring green-up of the greenness (gcc) and redness (rcc) indices, as measured by digital cameras at various NEON sites. The forecasts will be forecasts of daily mean gcc and rcc (specifically the 90% quantile called the gcc_90 and rcc_90) for a region of interests with each site’s digital photograph.\nTeams must provide access (minimum of URL, but ideally a script) to any additional data they wish to use to all teams in the challenge. Teams of various career stages and disciplines are encouraged to submit forecasts."
  },
  {
    "objectID": "Phenology.html#data-targets",
    "href": "Phenology.html#data-targets",
    "title": "4  Theme: Phenology",
    "section": "4.3 Data: Targets",
    "text": "4.3 Data: Targets\nThe challenge uses the following NEON data products:\nDP1.00033.001: Phenology images\nA file with previously released NEON data that has been processed into “targets” is provided below. The same processing will be applied to new data that are used for forecast evaluation. The processing script is available on the here.\n\n4.3.1 Green chromatic coordinate (gcc)\nDefinition\nThe ratio of the green digital number to the sum of the red, green, blue digital numbers from a digital camera. gcc_90 is the 90th percentile of the gcc within a set of pixel called a region of interest (ROI)\nMotivation\nQuantitative metrics of vegetation color extracted from PhenoCam imagery provide data that are consistent with ground observations of phenology and as well as other conventional vegetation indices across ecosystems.\n\n\n4.3.2 Red chromatic coordinate (rcc)\nDefinition\nThe ratio of the red digital number to the sum of the red, green, blue digital numbers from a digital camera. rcc_90 is the 90th percentile of the rcc within a set of pixel called a region of interest (ROI)\nMotivation\nWhile gcc is primarily a metric of vegetation greeness, rcc is more a metric of fall color. Adding rcc to the autumn forecast challenge has two motivations. First, from an end-user’s perspective the timing of peak fall coloration has aesthetic value, which translates into economic for tourism. Second, from the ecological perspective, autumn phenology involves two distinct (but coupled) processes, senescence (loss of leaf chlorophyll and photosythetic activity; translocation of nutrients) and abscission (actual leaf fall). Forecasting two indices helps us disentangle our ability to predict these two processes.\n\n\n4.3.3 Focal sites\nInformation on the sites can be found here:\n\nsite_data <- readr::read_csv(\"https://raw.githubusercontent.com/eco4cast/neon4cast-targets/main/NEON_Field_Site_Metadata_20220412.csv\") |> \n  dplyr::filter(phenology == 1)\n\nwith full site table at the end of this page.\nThe distribution of sites across ecosystems types is:\n\n\n\n\n\nVegetation type\nCount\n\n\n\n\ndeciduous broadleaf\n15\n\n\nevergreen needleleaf\n11\n\n\ngrassland\n9\n\n\ntundra\n5\n\n\nagriculture\n3\n\n\nevergreen broadleaf\n2\n\n\nshrubland\n2\n\n\n\n\n\n\n\n4.3.4 Target data calculation\nDigital cameras mounted above forests are pointed at the forest canopy. Images are collected every half hour.\nThe images are a set of pixels values in red, green, and blue color channels (RGB). A pixel value is an 8-bit digital number (DN). Because internal processing (including exposure control) and external factors affecting scene illumination (weather and atmospheric effects) both influence the retrieved RGB signature, we calculate a number of vegetation indices that are effective at suppressing this unwanted variation and maximizing the underlying phenological signal. Most important among these is the green chromatic coordinate (GCC), calculated as GCC = GDN / (RDN + GDN + BDN). The red chromatic coordinate (GCC) is calculated in a similar way.\nFor additional details, see Richardson et al. (2018) Scientific Data, and Richardson (2019) New Phytologist.\nPhenoCam data are processed and posted daily and the low latency of the PhenoCam data allows for a unique opportunity to evaluate forecasts in real-time.\nEach image has a defined “region of interest’ (ROI). An ROI is a set of pixels that isolates particular features in the image (i.e., a set of deciduous trees in a mixed forest). The ROI of the below top-of-canopy PhenoCams will be used to assess the forecasts’ accuracy. The mid-day (noon) mean GCC and GCC standard deviation for the ROI will be used for evaluation.\nAll data in the supplied file is available to build and evaluate models before submitting a forecast to challenge. Once new data becomes avialable, the data are appended to the existing file. Within the challenge scoring, only the new data are used to evaluate previously submitted forecasts.\n\n\n4.3.5 Target file\nHere is the format of the target file\n\nreadr::read_csv(\"https://data.ecoforecast.org/neon4cast-targets/phenology/phenology-targets.csv.gz\", guess_max = 1e6) |> \n  na.omit()\n\n# A tibble: 166,512 × 5\n   time       site_id variable observed       sd\n   <date>     <chr>   <chr>       <dbl>    <dbl>\n 1 2019-02-08 BONA    gcc_90      0.332 0.000957\n 2 2019-02-09 BONA    gcc_90      0.340 0.000957\n 3 2019-02-10 BONA    gcc_90      0.338 0.000957\n 4 2019-02-11 BONA    gcc_90      0.335 0.000957\n 5 2019-02-12 BONA    gcc_90      0.335 0.000957\n 6 2019-02-13 BONA    gcc_90      0.336 0.000957\n 7 2019-02-14 BONA    gcc_90      0.340 0.000957\n 8 2019-02-15 BONA    gcc_90      0.340 0.000957\n 9 2019-02-16 BONA    gcc_90      0.335 0.000957\n10 2019-02-17 BONA    gcc_90      0.334 0.000957\n# … with 166,502 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\nThe target file has the following columns:\n\ntime: date of observation\n\nsite_id: NEON site code\n\nvariable: variable (gcc_90 or rcc_90)\nobserved: daily value\nsd: standard deviation of the observed value"
  },
  {
    "objectID": "Phenology.html#timeline",
    "href": "Phenology.html#timeline",
    "title": "4  Theme: Phenology",
    "section": "4.4 Timeline",
    "text": "4.4 Timeline\nForecasts for a minimum of 35 days can be submitted daily by 12:59 pm ET any day. A minimum of 35 days in the future must be forecasted for each submission. For example, a forecast submitted on February 1 should be for at least February 1st – March 7th, but it could be for the full spring. New forecasts can be submitted daily as new weather forecasts and observations (e.g., PhenoCam) become available. Processed PhenoCam data will be available daily by 11:59 pm ET for each day. The key is that submissions are predictions of the future.\nDaily submissions are allowed and encouraged as new observations and weather forecasts become available, therefore the automation of forecast generation may be ideal. There are many ways to automate scripts that are written to download observations and meteorology drivers, generate forecasts, and submit forecasts. Two tools that many have used are cron jobs (see the R package cronR) that execute tasks at user specifics times and github actions. See more in Chapter 15\nCron jobs work on unix and mac systems. An example of a script that executes a cron job using R can be found here."
  },
  {
    "objectID": "Phenology.html#submissions",
    "href": "Phenology.html#submissions",
    "title": "4  Theme: Phenology",
    "section": "4.5 Submissions",
    "text": "4.5 Submissions\nThe required names for forecasted variables: gcc_90, and rcc_90.\nThe required time unit: date in YYYY-MM-DD format\nInstructions for submitting forecasts are found in Chapter 7"
  },
  {
    "objectID": "Phenology.html#meterological-inputs-for-modeling",
    "href": "Phenology.html#meterological-inputs-for-modeling",
    "title": "4  Theme: Phenology",
    "section": "4.6 Meterological inputs for modeling",
    "text": "4.6 Meterological inputs for modeling\nInformation about forecasted meteorology that is available for you to use when generating your forecasts can be found in Chapter 10"
  },
  {
    "objectID": "Phenology.html#useful-functions",
    "href": "Phenology.html#useful-functions",
    "title": "4  Theme: Phenology",
    "section": "4.7 Useful functions",
    "text": "4.7 Useful functions\nFunctions for validating, evaluating and submitting forecasts can be found in Chapter 13\nFunctions for downloading and working with the meteorology forecasts can be be found Chapter 10"
  },
  {
    "objectID": "Phenology.html#null-models",
    "href": "Phenology.html#null-models",
    "title": "4  Theme: Phenology",
    "section": "4.8 Null models",
    "text": "4.8 Null models\nTwo null models are automatically generated each day. The persistence null model use the most recent measurement of gcc_90 or rcc_90 and predicts that the values will be constant in the future. The climatology null model futures that the gcc_90 or rcc_90 will be equal to the historical mean of that day of year.\nCode for the persistence null model can be found here\nCode for the climatology null model can be found here"
  },
  {
    "objectID": "Phenology.html#faq",
    "href": "Phenology.html#faq",
    "title": "4  Theme: Phenology",
    "section": "4.9 FAQ",
    "text": "4.9 FAQ\nAnswers to frequency asks questions can be found in Chapter 15"
  },
  {
    "objectID": "Phenology.html#design-team",
    "href": "Phenology.html#design-team",
    "title": "4  Theme: Phenology",
    "section": "4.10 Design team",
    "text": "4.10 Design team\nMin Chen, University of Wisconsin, Madison\nMichael Dietze, Boston University\nKathy Gerst, National Phenology Network\nChris Jones, NC State University David LeBauer, University of Arizona\nDabasmita Pal, Michigan State University\nAndrew Richardson, Northern Arizona University\nArun Ross, Michigan State University\nBijan Seyednasrollah, Northern Arizona University, PhenoCam Network\nQuinn Thomas, Virginia Tech\nKathryn Wheeler, Boston University\nLuke Zachmann, Conservation Science Partners\nKai Zhu, University of California - Santa Cruz"
  },
  {
    "objectID": "Phenology.html#partners",
    "href": "Phenology.html#partners",
    "title": "4  Theme: Phenology",
    "section": "4.11 Partners",
    "text": "4.11 Partners\nThe challenge is hosted by the Ecological Forecasting Initiative (EFI; https://ecoforecast.org/) and its U.S. National Science Foundation sponsored Research Coordination Network (EFI-RCN; https://ecoforecast.org/rcn/).\nData used in the challenge are collected by the National Ecological Observatory Network (NEON; https://www.neonscience.org/) and hosted by the Phenocam Network (http://phenocam.sr.unh.edu/).\nThe forecasting challenge was developed in collaboration with the USA National Phenology Network: https://www.usanpn.org/usa-national-phenology-network."
  },
  {
    "objectID": "Phenology.html#site-table",
    "href": "Phenology.html#site-table",
    "title": "4  Theme: Phenology",
    "section": "4.12 Site table",
    "text": "4.12 Site table\n\n\n\n\n\n\n\n\n\n\n\n\n\nsiteID\nsite name\nPhenocam vegetation type\nPhenocam code\nPhenocam ROI\nNEON site URL\n\n\n\n\nKONA\nKonza Prairie Agroecosystem NEON\nagriculture\nNEON.D06.KONA.DP1.00033\nAG_1000\nhttps://www.neonscience.org/field-sites/kona\n\n\nLAJA\nLajas Experimental Station NEON\nagriculture\nNEON.D04.LAJA.DP1.00033\nAG_1000\nhttps://www.neonscience.org/field-sites/laja\n\n\nSTER\nNorth Sterling NEON\nagriculture\nNEON.D10.STER.DP1.00033\nAG_1000\nhttps://www.neonscience.org/field-sites/ster\n\n\nHARV\nHarvard Forest & Quabbin Watershed NEON\ndeciduous broadleaf\nNEON.D01.HARV.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/harv\n\n\nSCBI\nSmithsonian Conservation Biology Institute NEON\ndeciduous broadleaf\nNEON.D02.SCBI.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/scbi\n\n\nORNL\nOak Ridge NEON\ndeciduous broadleaf\nNEON.D07.ORNL.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/ornl\n\n\nUNDE\nUniversity of Notre Dame Environmental Research Center NEON\ndeciduous broadleaf\nNEON.D05.UNDE.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/unde\n\n\nCLBJ\nLyndon B. Johnson National Grassland NEON\ndeciduous broadleaf\nNEON.D11.CLBJ.DP1.00033\nDB_2000\nhttps://www.neonscience.org/field-sites/clbj\n\n\nBLAN\nBlandy Experimental Farm NEON\ndeciduous broadleaf\nNEON.D02.BLAN.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/blan\n\n\nLENO\nLenoir Landing NEON\ndeciduous broadleaf\nNEON.D08.LENO.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/leno\n\n\nTREE\nTreehaven NEON\ndeciduous broadleaf\nNEON.D05.TREE.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/tree\n\n\nDELA\nDead Lake NEON\ndeciduous broadleaf\nNEON.D08.DELA.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/dela\n\n\nGRSM\nGreat Smoky Mountains National Park NEON\ndeciduous broadleaf\nNEON.D07.GRSM.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/grsm\n\n\nMLBS\nMountain Lake Biological Station NEON\ndeciduous broadleaf\nNEON.D07.MLBS.DP1.00033\nDB_2000\nhttps://www.neonscience.org/field-sites/mlbs\n\n\nSERC\nSmithsonian Environmental Research Center NEON\ndeciduous broadleaf\nNEON.D02.SERC.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/serc\n\n\nSTEI\nSteigerwaldt-Chequamegon NEON\ndeciduous broadleaf\nNEON.D05.STEI.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/stei\n\n\nUKFS\nUniversity of Kansas Field Station NEON\ndeciduous broadleaf\nNEON.D06.UKFS.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/ukfs\n\n\nBART\nBartlett Experimental Forest NEON\ndeciduous broadleaf\nNEON.D01.BART.DP1.00033\nDB_1000\nhttps://www.neonscience.org/field-sites/bart\n\n\nGUAN\nGuanica Forest NEON\nevergreen broadleaf\nNEON.D04.GUAN.DP1.00033\nEB_1000\nhttps://www.neonscience.org/field-sites/guan\n\n\nPUUM\nPu’u Maka’ala Natural Area Reserve NEON\nevergreen broadleaf\nNEON.D20.PUUM.DP1.00033\nEB_1000\nhttps://www.neonscience.org/field-sites/puum\n\n\nBONA\nCaribou-Poker Creeks Research Watershed NEON\nevergreen needleleaf\nNEON.D19.BONA.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/bona\n\n\nYELL\nYellowstone National Park NEON\nevergreen needleleaf\nNEON.D12.YELL.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/yell\n\n\nOSBS\nOrdway-Swisher Biological Station NEON\nevergreen needleleaf\nNEON.D03.OSBS.DP1.00033\nEN_1001\nhttps://www.neonscience.org/field-sites/osbs\n\n\nSJER\nSan Joaquin Experimental Range NEON\nevergreen needleleaf\nNEON.D17.SJER.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/sjer\n\n\nTALL\nTalladega National Forest NEON\nevergreen needleleaf\nNEON.D08.TALL.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/tall\n\n\nWREF\nWind River Experimental Forest NEON\nevergreen needleleaf\nNEON.D16.WREF.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/wref\n\n\nABBY\nAbby Road NEON\nevergreen needleleaf\nNEON.D16.ABBY.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/abby\n\n\nJERC\nThe Jones Center At Ichauway NEON\nevergreen needleleaf\nNEON.D03.JERC.DP1.00033\nEN_2000\nhttps://www.neonscience.org/field-sites/jerc\n\n\nRMNP\nRocky Mountains NEON\nevergreen needleleaf\nNEON.D10.RMNP.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/rmnp\n\n\nSOAP\nSoaproot Saddle NEON\nevergreen needleleaf\nNEON.D17.SOAP.DP1.00033\nEN_1001\nhttps://www.neonscience.org/field-sites/soap\n\n\nTEAK\nLower Teakettle NEON\nevergreen needleleaf\nNEON.D17.TEAK.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/teak\n\n\nCPER\nCentral Plains Experimental Range NEON\ngrassland\nNEON.D10.CPER.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/cper\n\n\nWOOD\nChase Lake National Wildlife Refuge NEON\ngrassland\nNEON.D09.WOOD.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/wood\n\n\nKONZ\nKonza Prairie Biological Station NEON\ngrassland\nNEON.D06.KONZ.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/konz\n\n\nDCFS\nDakota Coteau Field Site NEON\ngrassland\nNEON.D09.DCFS.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/dcfs\n\n\nMOAB\nMoab NEON\ngrassland\nNEON.D13.MOAB.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/moab\n\n\nNOGP\nNorthern Great Plains Research Laboratory NEON\ngrassland\nNEON.D09.NOGP.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/nogp\n\n\nDSNY\nDisney Wilderness Preserve NEON\ngrassland\nNEON.D03.DSNY.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/dsny\n\n\nJORN\nJornada Experimental Range NEON\ngrassland\nNEON.D14.JORN.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/jorn\n\n\nOAES\nMarvin Klemme Range Research Station NEON\ngrassland\nNEON.D11.OAES.DP1.00033\nGR_1000\nhttps://www.neonscience.org/field-sites/oaes\n\n\nONAQ\nOnaqui NEON\nshrubland\nNEON.D15.ONAQ.DP1.00033\nSH_1000\nhttps://www.neonscience.org/field-sites/onaq\n\n\nSRER\nSanta Rita Experimental Range NEON\nshrubland\nNEON.D14.SRER.DP1.00033\nSH_1000\nhttps://www.neonscience.org/field-sites/srer\n\n\nNIWO\nNiwot Ridge NEON\ntundra\nNEON.D13.NIWO.DP1.00033\nTN_1000\nhttps://www.neonscience.org/field-sites/niwo\n\n\nTOOL\nToolik Field Station NEON\ntundra\nNEON.D18.TOOL.DP1.00033\nTN_1000\nhttps://www.neonscience.org/field-sites/tool\n\n\nBARR\nUtqiaġvik NEON\ntundra\nNEON.D18.BARR.DP1.00033\nTN_1000\nhttps://www.neonscience.org/field-sites/barr\n\n\nDEJU\nDelta Junction NEON\ntundra\nNEON.D19.DEJU.DP1.00033\nEN_1000\nhttps://www.neonscience.org/field-sites/deju\n\n\nHEAL\nHealy NEON\ntundra\nNEON.D19.HEAL.DP1.00033\nTN_1000\nhttps://www.neonscience.org/field-sites/heal"
  },
  {
    "objectID": "Phenology.html#references",
    "href": "Phenology.html#references",
    "title": "4  Theme: Phenology",
    "section": "4.13 References",
    "text": "4.13 References\nRichardson, A., Hufkens, K., Milliman, T. et al. Tracking vegetation phenology across diverse North American biomes using PhenoCam imagery. Sci Data 5, 180028 (2018). https://doi.org/10.1038/sdata.2018.28\nRichardson, A.D. (2019), Tracking seasonal rhythms of plants in diverse ecosystems with digital camera imagery. New Phytol, 222: 1742-1750. https://doi.org/10.1111/nph.15591"
  },
  {
    "objectID": "Beetles.html",
    "href": "Beetles.html",
    "title": "5  Theme: Beetle Communities",
    "section": "",
    "text": "What: Beetle abundance and species richness\nWhere: 47 terrestrial NEON sites that span the diverse ecosystems of the U.S.\nWhen: Weekly forecasts for 1 year in the future\nWhy: Improve understanding of habitat quality, conservation potential, land-use sustainability, and biodiversity change in response to global change and ecological disturbances\nWho: Open to any individual or team that registers.\nHow: REGISTER your team and submit forecast. If you registered for the Round 1 (2021) and are using the same team and method then you do not need to re-register.\nThe video below is an overview of the Beetle Communities Challenge that was recorded for the 2021 Early Career Annual Meeting"
  },
  {
    "objectID": "Beetles.html#overview",
    "href": "Beetles.html#overview",
    "title": "5  Theme: Beetle Communities",
    "section": "5.1 Overview",
    "text": "5.1 Overview\nBiodiversity monitoring is critical for understanding environmental quality, evaluating the sustainability of land-use practices, and forecasting future impacts of global change on ecosystems. Sentinel species give forewarning of environmental risk to humans, so are particularly useful for such monitoring and forecasting efforts because they can provide surrogates for other co-located components of biodiversity (Sauberer et al. 2004).\nGround beetles (Family: Carabidae) are appropriate candidates for biodiversity monitoring and ecological forecasting as they are well-studied sentinel species that are geographically widespread, and their community dynamics are particularly congruent with the diversity of other invertebrates (Holland 2002; Lundgren & McCravy 2011; Bousquet 2012; Hoekman et al. 2017). Therefore, monitoring carabid communities and forecasting changes in their species richness and abundance can be useful in studying edge effects and habitat quality (Magura 2002), conservation potential (Butterfield 1995), land-use sustainability (Pearce & Venier 2006) and biodiversity change in response to global change and ecological disturbances (Koivula 2011). Most ecological forecasting models are limited in the geographic scale and also suffer from scarcity of temporally extensive data. Further, most existing forecasting efforts focus on a single species (Humphries et al. 2018) with limited community-wide forecasts at the continental scale. Developing forecasts for community-scale metrics (i.e., species richness, abundance) and evaluating such models for accuracy and generalizability can help test our scientific knowledge of spatial (geographical turnover) and temporal (seasonal, inter-annual) carabid community dynamics (Dietze et al. 2018). Such forecasting models can inform regional or local habitat management, identify where biodiversity monitoring efforts should be prioritized, and shed light on what data or modelling techniques are needed to build the best forecasts of ecological dynamics (e.g., can we predict richness or abundance better and why?) (Johansson et al. 2019).\nWith the long-term, community-wide, continental-scale data collection through the National Ecological Observatory Network (NEON), 181 data products are available for 81 sites in the US (47 terrestrial, at which carabids are sampled, and 34 aquatic). Fully initiated in 2019, this sampling will continue for 30 years (Schimel et al. 2007; 2011). NEON has effectively removed the previous barriers to community-scale forecasting across a broader geographical realm."
  },
  {
    "objectID": "Beetles.html#challenge",
    "href": "Beetles.html#challenge",
    "title": "5  Theme: Beetle Communities",
    "section": "5.2 Challenge",
    "text": "5.2 Challenge\nThis is an open ecological forecasting challenge to forecast carabid species richness, defined as the total number of species, and abundance, defined as the total number of carabid individuals. The forecasts should be done weekly per site for all NEON terrestrial sites with richness being absolute and abundance scaled by the sampling effort. NEON releases carabid sampling data weekly and no sooner than 60 days after collection, so a model submitted on June 30 can include a forecast for the first week of May, and so forth. Teams may use any open data products as drivers of richness and abundance so long as they are not from the month being forecast, and are made publicly available (minimum of URL, but ideally a script). Potential driver data sources include: NEON site data (Soil and sediment data, Terrestrial Plant data, weather data), NOAA forecasts, and beyond."
  },
  {
    "objectID": "Beetles.html#data-targets",
    "href": "Beetles.html#data-targets",
    "title": "5  Theme: Beetle Communities",
    "section": "5.3 Data: Targets",
    "text": "5.3 Data: Targets\nThe challenge uses the following NEON data product:\nDP1.10022.001: Ground beetles sampled from pitfall traps\nA file with previously released NEON data that has been processed into the aggregate “target” variables (richness and abundance) is provided below. The same processing will be applied to new data that are used for forecast evaluation. Further information about data structure, initial code for processing, and example null forecasts is provided in the neon4cast-beetles GitHub repository.\nForecasts will be made on a weekly basis for the abundance of beetles at a given NEON site at a given month (‘abundance’) and the observed species richness (n, number of species) of carabid beetles at each NEON site, each month.\n\n5.3.1 Abundance of beetles (abundance)\nDefinition\nTotal number of carabid individuals per trap-night, estimated each week of the year at each NEON site\nMotivation\nA forecast prediction can be compared against only measured data (i.e. counts) and not latent variables (i.e. true carabid abundance), which are only inferred under specific model assumptions. However, raw count of beetles found in a particular trap depends on many other drivers than local abundance; in particular, the sampling effort. To avoid the need to accurately predict the sampling effort, we compute a target variable as counts per trap-night (number of nights each trap was set at the site; also called ‘catch per unit effort’). We chose this to define this variable in terms of total carabid abundance, rather than resolving to particular taxonomy (in contrast to species-specific relative abundance) because it simplifies issues related to taxonomic resolution of unpinned samples, data latency, and the choice of focal species. As supported by literature (Hoekman et al. 2017 and literature cited therein), we believe that abundance of the beetle family as a whole is an ecologically relevant metric. We considered predictions aggregated to the site level (rather than predicting individual traps or individual plots) to be both the most ecologically meaningful and simplest choice. Traps are typically collected every two weeks. Submitting a forecast for every week avoids the need to predict which weeks of the year collection does or does not occur. See https://github.com/eco4cast/neon4cast-beetles/blob/master/02_targets.R for a programmatic definition of how the abundance metric is defined.\n\n\n5.3.2 Species richness (n)\nDefinition\nTotal number of unique ‘species’ in a sampling bout for each NEON site each week. For this challenge, we define ‘species’ as the taxonomic unit closest to species (e.g., species, genus, morphospecies) for each individual since not all identifications in the raw data are strictly at species-level.\nMotivation\nA forecast prediction can be compared against only measured data (i.e. observed count of taxonomic units) and not latent variables (i.e. count of species), which are only inferred under specific model and taxonomic assumptions. The number of unique taxonomic identities of beetles in a trap depends on many drivers, including sampling effort. As demonstrated by species rarefaction curves in ecology, the more time a trap is left out, the more individual beetles will fall in, and thus the more species can be expected. However, since perfect species-level data are not available to us and to keep the forecasted variables from being overly derived, we define the target variable as the total number of unique ‘species’ per week per NEON site. For this challenge, we chose to define ‘species’ as the taxonomic unit closest to species (e.g., species, genus, morphospecies) since not all identifications in the raw data are strictly at species-level. Species identifications will be used for individuals identified to sub-species level, as these are uncommon in the raw data. NEON taxonomists identify individuals as morphologically distinct units. Thus, it is reasonable to assert that the count of finest morphologically distinct identification (e.g., species, genus, morphospecies) is biologically meaningful, and thus the count of these is an important focal forecast variable. We focus on the NEON site as the spatial resolution and weekly intervals as the temporal resolution for the same reasons stated in the abundance metric. See https://github.com/eco4cast/NEON-community-forecast/blob/master/02_targets.R for a programmatic definition of how the richness metric is defined.\n\n\n5.3.3 Focal sites\nAll 47 NEON terrestrial sites are included\nInformation on the sites can be found here:\n\nsite_data <- readr::read_csv(\"https://raw.githubusercontent.com/eco4cast/neon4cast-targets/main/NEON_Field_Site_Metadata_20220412.csv\") |> \n  dplyr::filter(beetles == 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsiteID\nsite name\nvegetation type\nlatitude\nlongtitude\nNEON site URL\n\n\n\n\nABBY\nAbby Road NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n45.76244\n-122.33032\nhttps://www.neonscience.org/field-sites/abby\n\n\nBARR\nUtqiaġvik NEON\nEmergent Herbaceous Wetlands\n71.28241\n-156.61936\nhttps://www.neonscience.org/field-sites/barr\n\n\nBART\nBartlett Experimental Forest NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest\n44.06389\n-71.28737\nhttps://www.neonscience.org/field-sites/bart\n\n\nBLAN\nBlandy Experimental Farm NEON\nDeciduous Forest|Pasture/Hay\n39.03370\n-78.04179\nhttps://www.neonscience.org/field-sites/blan\n\n\nBONA\nCaribou-Poker Creeks Research Watershed NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n65.15401\n-147.50258\nhttps://www.neonscience.org/field-sites/bona\n\n\nCLBJ\nLyndon B. Johnson National Grassland NEON\nDeciduous Forest|Grassland/Herbaceous\n33.40123\n-97.57000\nhttps://www.neonscience.org/field-sites/clbj\n\n\nCPER\nCentral Plains Experimental Range NEON\nGrassland/Herbaceous\n40.81554\n-104.74559\nhttps://www.neonscience.org/field-sites/cper\n\n\nDCFS\nDakota Coteau Field Site NEON\nGrassland/Herbaceous\n47.16165\n-99.10656\nhttps://www.neonscience.org/field-sites/dcfs\n\n\nDEJU\nDelta Junction NEON\nEvergreen Forest|Shrub/Scrub|Woody Wetlands\n63.88112\n-145.75136\nhttps://www.neonscience.org/field-sites/deju\n\n\nDELA\nDead Lake NEON\nEvergreen Forest|Woody Wetlands\n32.54173\n-87.80388\nhttps://www.neonscience.org/field-sites/dela\n\n\nDSNY\nDisney Wilderness Preserve NEON\nPasture/Hay|Woody Wetlands\n28.12505\n-81.43619\nhttps://www.neonscience.org/field-sites/dsny\n\n\nGRSM\nGreat Smoky Mountains National Park NEON\nDeciduous Forest|Evergreen Forest\n35.68896\n-83.50195\nhttps://www.neonscience.org/field-sites/grsm\n\n\nGUAN\nGuanica Forest NEON\nEvergreen Forest\n17.96955\n-66.86870\nhttps://www.neonscience.org/field-sites/guan\n\n\nHARV\nHarvard Forest & Quabbin Watershed NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n42.53691\n-72.17265\nhttps://www.neonscience.org/field-sites/harv\n\n\nHEAL\nHealy NEON\nDwarf Scrub|Evergreen Forest|Shrub/Scrub\n63.87580\n-149.21335\nhttps://www.neonscience.org/field-sites/heal\n\n\nJERC\nThe Jones Center At Ichauway NEON\nCultivated Crops|Deciduous Forest|Evergreen Forest|Mixed Forest\n31.19484\n-84.46862\nhttps://www.neonscience.org/field-sites/jerc\n\n\nJORN\nJornada Experimental Range NEON\nShrub/Scrub\n32.59069\n-106.84254\nhttps://www.neonscience.org/field-sites/jorn\n\n\nKONA\nKonza Prairie Agroecosystem NEON\nCultivated Crops\n39.11045\n-96.61293\nhttps://www.neonscience.org/field-sites/kona\n\n\nKONZ\nKonza Prairie Biological Station NEON\nDeciduous Forest|Grassland/Herbaceous\n39.10077\n-96.56307\nhttps://www.neonscience.org/field-sites/konz\n\n\nLAJA\nLajas Experimental Station NEON\nCultivated Crops|Grassland/Herbaceous|Pasture/Hay\n18.02126\n-67.07689\nhttps://www.neonscience.org/field-sites/laja\n\n\nLENO\nLenoir Landing NEON\nDeciduous Forest|Woody Wetlands\n31.85386\n-88.16118\nhttps://www.neonscience.org/field-sites/leno\n\n\nMLBS\nMountain Lake Biological Station NEON\nDeciduous Forest\n37.37831\n-80.52485\nhttps://www.neonscience.org/field-sites/mlbs\n\n\nMOAB\nMoab NEON\nEvergreen Forest|Shrub/Scrub\n38.24828\n-109.38827\nhttps://www.neonscience.org/field-sites/moab\n\n\nNIWO\nNiwot Ridge NEON\nEvergreen Forest|Grassland/Herbaceous\n40.05425\n-105.58237\nhttps://www.neonscience.org/field-sites/niwo\n\n\nNOGP\nNorthern Great Plains Research Laboratory NEON\nGrassland/Herbaceous\n46.76972\n-100.91535\nhttps://www.neonscience.org/field-sites/nogp\n\n\nOAES\nMarvin Klemme Range Research Station NEON\nGrassland/Herbaceous|Shrub/Scrub\n35.41060\n-99.05878\nhttps://www.neonscience.org/field-sites/oaes\n\n\nONAQ\nOnaqui NEON\nEvergreen Forest|Shrub/Scrub\n40.17760\n-112.45245\nhttps://www.neonscience.org/field-sites/onaq\n\n\nORNL\nOak Ridge NEON\nDeciduous Forest|Evergreen Forest|Pasture/Hay\n35.96413\n-84.28259\nhttps://www.neonscience.org/field-sites/ornl\n\n\nOSBS\nOrdway-Swisher Biological Station NEON\nEmergent Herbaceous Wetlands|Evergreen Forest|Woody Wetlands\n29.68928\n-81.99343\nhttps://www.neonscience.org/field-sites/osbs\n\n\nPUUM\nPu’u Maka’ala Natural Area Reserve NEON\nEvergreen Forest\n19.55309\n-155.31731\nhttps://www.neonscience.org/field-sites/puum\n\n\nRMNP\nRocky Mountains NEON\nEvergreen Forest\n40.27590\n-105.54596\nhttps://www.neonscience.org/field-sites/rmnp\n\n\nSCBI\nSmithsonian Conservation Biology Institute NEON\nDeciduous Forest|Evergreen Forest|Pasture/Hay\n38.89292\n-78.13949\nhttps://www.neonscience.org/field-sites/scbi\n\n\nSERC\nSmithsonian Environmental Research Center NEON\nCultivated Crops|Deciduous Forest\n38.89013\n-76.56001\nhttps://www.neonscience.org/field-sites/serc\n\n\nSJER\nSan Joaquin Experimental Range NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n37.10878\n-119.73228\nhttps://www.neonscience.org/field-sites/sjer\n\n\nSOAP\nSoaproot Saddle NEON\nEvergreen Forest|Shrub/Scrub\n37.03337\n-119.26219\nhttps://www.neonscience.org/field-sites/soap\n\n\nSRER\nSanta Rita Experimental Range NEON\nShrub/Scrub\n31.91068\n-110.83549\nhttps://www.neonscience.org/field-sites/srer\n\n\nSTEI\nSteigerwaldt-Chequamegon NEON\nDeciduous Forest|Mixed Forest|Woody Wetlands\n45.50894\n-89.58637\nhttps://www.neonscience.org/field-sites/stei\n\n\nSTER\nNorth Sterling NEON\nCultivated Crops\n40.46189\n-103.02929\nhttps://www.neonscience.org/field-sites/ster\n\n\nTALL\nTalladega National Forest NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest\n32.95047\n-87.39326\nhttps://www.neonscience.org/field-sites/tall\n\n\nTEAK\nLower Teakettle NEON\nEvergreen Forest|Shrub/Scrub\n37.00583\n-119.00602\nhttps://www.neonscience.org/field-sites/teak\n\n\nTOOL\nToolik Field Station NEON\nDwarf Scrub|Shrub/Scrub\n68.66109\n-149.37047\nhttps://www.neonscience.org/field-sites/tool\n\n\nTREE\nTreehaven NEON\nDeciduous Forest|Evergreen Forest|Mixed Forest|Woody Wetlands\n45.49369\n-89.58571\nhttps://www.neonscience.org/field-sites/tree\n\n\nUKFS\nUniversity of Kansas Field Station NEON\nDeciduous Forest|Pasture/Hay\n39.04043\n-95.19215\nhttps://www.neonscience.org/field-sites/ukfs\n\n\nUNDE\nUniversity of Notre Dame Environmental Research Center NEON\nDeciduous Forest|Mixed Forest|Woody Wetlands\n46.23391\n-89.53725\nhttps://www.neonscience.org/field-sites/unde\n\n\nWOOD\nChase Lake National Wildlife Refuge NEON\nEmergent Herbaceous Wetlands|Grassland/Herbaceous\n47.12820\n-99.24133\nhttps://www.neonscience.org/field-sites/wood\n\n\nWREF\nWind River Experimental Forest NEON\nEvergreen Forest\n45.82049\n-121.95191\nhttps://www.neonscience.org/field-sites/wref\n\n\nYELL\nYellowstone National Park NEON\nEvergreen Forest|Grassland/Herbaceous|Shrub/Scrub\n44.95348\n-110.53914\nhttps://www.neonscience.org/field-sites/yell\n\n\n\n\n\n\n\n5.3.4 Target data calculation\nGround beetle data are collected at each NEON site every two weeks throughout the sampling season. The sampling season is defined based on measures of growing season, including vegetation indices, phenology, and degree days, for a maximum of 13 bouts per site during which the 10-day average low temperature at the site is >4°C.\nSamples are collected from pitfall traps placed at each of the cardinal directions within the 10 plots per site representative of up to three dominant vegetation types. Four traps were placed from 2014-2017 and from 2018 onward the northward plot was eliminated leaving three traps for each plot. Ground beetles from the pitfall traps are removed, sorted, and identified to the lowest possible taxonomic rank or morphospecies. A subset of individuals (up to 467 per site and year) are sent to taxonomic experts for subsequent identification with priority on individuals for which species-level identification was not able to be assigned. Further detail can be found in the NEON Ground Beetle User Guide.\nRaw (NEON L1 ground beetle data product DP1.10022.001) are accessible via the NEON data portal, via the NEON API, via R using the neonUtilties package, and via R using neonStore::neon_download. The raw data is also available through the NEON data portal with archived copies at https://data.ecoforecast.org/minio/neonstore.\nThe raw data is processed to generate total abundance and richness per week per NEON site. All data in the supplied file is available to build and evaluate models before submitting a forecast to challenge. Once new data becomes available, the data are appended to the existing file. Within the challenge scoring, only the new data are used to evaluate previously submitted forecasts.\nAs part of our reproducible workflow, we provide an R script for producing derived tables of total abundance and richness from the raw NEON data. Our workflow gives preference to expert taxonomist identifications when available. Since expert taxonomy lags behind identifications from the sorting and pinning process, newer data will not be updated with expert taxonomy. The abundance table gives total abundance at each site for each week. The richness table gives an aggregate count of the number of ‘species’ at each site in each week.\nNote: The table includes all data that NEON has collected and can be used for building and training models (new data will be posted after forecasts are submitted)\n\n\n5.3.5 Target file\nThe code use to process the raw data to the evaluation data can be found here: https://github.com/eco4cast/neon4cast-targets/blob/main/beetles_targets.R\nHere is the format of the target file\n\nreadr::read_csv(\"https://data.ecoforecast.org/neon4cast-targets/beetles/beetles-targets.csv.gz\", guess_max = 1e6)\n\n# A tibble: 6,882 × 5\n   time       site_id variable  observed iso_week\n   <date>     <chr>   <chr>        <dbl> <chr>   \n 1 2016-09-12 ABBY    abundance   1.05   2016-W37\n 2 2016-09-12 ABBY    richness   14      2016-W37\n 3 2016-09-26 ABBY    abundance   4.45   2016-W39\n 4 2016-09-26 ABBY    richness   13      2016-W39\n 5 2017-05-01 ABBY    abundance   0.0554 2017-W18\n 6 2017-05-01 ABBY    richness   10      2017-W18\n 7 2017-05-15 ABBY    abundance   0.180  2017-W20\n 8 2017-05-15 ABBY    richness   19      2017-W20\n 9 2017-05-29 ABBY    abundance   0.425  2017-W22\n10 2017-05-29 ABBY    richness   19      2017-W22\n# … with 6,872 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\nThe table has the following columns:\n\ntime: YYYY-MM-DD (the Monday marking the week of sample collection (for training data) or forecast (submission). Per ISO standards, Monday marks the first day of each week.)\n\nsite_id: NEON site ID\nvariable: abundance of beetles (abundance) or species richness (richness)\nobserved: value of variable\niso_week: The ISO-week"
  },
  {
    "objectID": "Beetles.html#timeline",
    "href": "Beetles.html#timeline",
    "title": "5  Theme: Beetle Communities",
    "section": "5.4 Timeline",
    "text": "5.4 Timeline\nThe timeline is determined by the data latency provided by NEON. NEON carabid pitfall trap data is released monthly with a latency of at least 60 days after collection. Weekly forecasts were chosen to best match up with NEON’s weekly release of carabid data.\nAs an example, carabid pitfall trap data released in the last week of June would include data as recent as the last week of April. Thus, a model submitted in the last week of June could include forecasts from May onwards. Then, the forecast update submitted at the end of July can use new May data to help refine June forecasts, or forecasts following June, depending on what drivers are used. The July forecast update is due by 11:59 pm EST on July 31. Forecasts updates will not be considered for weeks where NEON validation data has already been released (i.e., no May forecast updates may be submitted on July 31) or for weeks when no NEON carabid data is available.\n  Pitfall traps are collected and reset every 2 weeks throughout the growing season. Due to weather and conditions beyond the field team’s control, this collection schedule may not be followed. Thus, the exact collection dates cannot be known until they have happened. Field data are made publicly available on the data portal as the bet_fielddata dataframe no sooner than 14 days after collection. Teams can use bet_fielddata to inform the actual collection schedule. Data with parataxonomist identifications are made publicly available on the data portal as the bet_sorting dataframe no sooner than 60 days after collection. Data are released on the NEON data portal weekly, but may be released on any day of the week. The forecast schedule follows the ISO week standard with weeks starting on Mondays."
  },
  {
    "objectID": "Beetles.html#submissions",
    "href": "Beetles.html#submissions",
    "title": "5  Theme: Beetle Communities",
    "section": "5.5 Submissions",
    "text": "5.5 Submissions\nThe required names for forecasted variables: abundance and richness\nThe required time unit: date for the Monday of the corresponding isoweek in YYYY-MM-DD format.\nInstructions for submitting forecasts are found in Chapter 7"
  },
  {
    "objectID": "Beetles.html#meterological-inputs-for-modeling",
    "href": "Beetles.html#meterological-inputs-for-modeling",
    "title": "5  Theme: Beetle Communities",
    "section": "5.6 Meterological inputs for modeling",
    "text": "5.6 Meterological inputs for modeling\nInformation about forecasted meteorology that is available for you to use when generating your forecasts can be found in Chapter 10"
  },
  {
    "objectID": "Beetles.html#useful-functions",
    "href": "Beetles.html#useful-functions",
    "title": "5  Theme: Beetle Communities",
    "section": "5.7 Useful functions",
    "text": "5.7 Useful functions\nFunctions for validating, evaluating and submitting forecasts can be found in Chapter 13\nFunctions for downloading and working with the meteorology forecasts can be be found Chapter 10"
  },
  {
    "objectID": "Beetles.html#null-models",
    "href": "Beetles.html#null-models",
    "title": "5  Theme: Beetle Communities",
    "section": "5.8 Null models",
    "text": "5.8 Null models\nOne null model is automatically generated each week: the mean null model uses the mean of the historical data for each site."
  },
  {
    "objectID": "Beetles.html#faq",
    "href": "Beetles.html#faq",
    "title": "5  Theme: Beetle Communities",
    "section": "5.9 FAQ",
    "text": "5.9 FAQ\nAnswers to frequency asks questions can be found in Chapter 15"
  },
  {
    "objectID": "Beetles.html#design-team",
    "href": "Beetles.html#design-team",
    "title": "5  Theme: Beetle Communities",
    "section": "5.10 Design team",
    "text": "5.10 Design team\nAnna Spiers, University of Colorado, Boulder\nCarl Boettiger, University of California, Berkeley\nTad Dallas, Louisiana State University\nNico Franz, NEON Biorepository at Arizona State University\nKari Norman, University of California, Berkeley\nThilina Surasinghe, Bridgewater State University\nBrett Melbourne, University of Colorado, Boulder\nEric Sokol, NEON\nKelsey Yule, NEON Biorepository at Arizona State University"
  },
  {
    "objectID": "Beetles.html#partners",
    "href": "Beetles.html#partners",
    "title": "5  Theme: Beetle Communities",
    "section": "5.11 Partners",
    "text": "5.11 Partners\nThe challenge is hosted by the Ecological Forecasting Initiative (EFI; https://ecoforecast.org/) and its U.S. National Science Foundation sponsored Research Coordination Network (EFI-RCN; https://ecoforecast.org/rcn/).\nData used in the challenge from National Ecological Observatory Network (NEON): https://www.neonscience.org/."
  },
  {
    "objectID": "Beetles.html#references",
    "href": "Beetles.html#references",
    "title": "5  Theme: Beetle Communities",
    "section": "5.12 References",
    "text": "5.12 References\nBousquet, Y. (2012) Catalogue of Geadephaga (Coleoptera: Adephaga) of America, north of Mexico. ZooKeys 245: 1-1722. https://doi.org/10.3897/zookeys.245.3416\nButterfield, J., Luff, M., Baines, M., Eyre, M. (1995) Carabid beetle communities as indicators of conservation potential in upland forests. Forest Ecology and Management 79, 63-77. https://doi.org/10.1016/0378-1127(95)03620-2\nDietze, M.C., Fox, A., Beck-Johnson, L.M., Betancourt, J.L., Hooten, M.B., Jarnevich, C.S., Keitt, T.H., Kenney, M.A., Laney, C.M., Larsen, L.G. (2018) Iterative near-term ecological forecasting: Needs, opportunities, and challenges. Proceedings of the National Academy of Sciences 115, 1424-1432. https://doi.org/10.1073/pnas.1710231115\nGneiting, T., & Raftery, A. E. (2007). Strictly proper scoring rules, prediction, and estimation. Journal of the American Statistical Association, 102(477), 359–378. https://doi.org/10.1198/016214506000001437\nHoekman, D., LeVan, K.E., Gibson, C., Ball, G.E., Browne, R.A., Davidson, R.L., Eriwin, T.L., Knisley, C.B., LaBonte, J.R., Lundgren, J., Maddison, D.R., Moore, W., Niemela, J., Ober, K.A., Pearson, D.L. Spence, J.R., Will, K., Work, T. (2017) Design for ground beetle abundance and diversity sampling within the National Ecological Observatory Network. Ecosphere, 8(4), e01744. https://doi.org/10.1002/ecs2.1744\nHolland, J.M. (2002) The agroecology of carabid beetles. Intercept Limited, Andover.\nHumphries, G.R., Che-Castaldo, C., Bull, P., Lipstein, G., Ravia, A., Carrión, B., Bolton, T., Ganguly, A., Lynch, H.J. (2018) Predicting the future is hard and other lessons from a population time series data science competition. Ecological Informatics 48, 1-11. https://doi.org/10.1016/j.ecoinf.2018.07.004\nJohansson, M.A., Apfeldorf, K.M., Dobson, S., Devita, J., Buczak, A.L., Baugher, B., Moniz, L.J., Bagley, T., Babin, S.M., Guven, E. (2019) An open challenge to advance probabilistic forecasting for dengue epidemics. Proceedings of the National Academy of Sciences 116, 24268-24274. https://doi.org/10.1073/pnas.1909865116\nKoivula, M.J. (2011) Useful model organisms, indicators, or both? Ground beetles (Coleoptera, Carabidae) reflecting environmental conditions. ZooKeys, 287-317. https://doi.org/10.3897/zookeys.100.1533\nLundgren, J., McCravy, K. (2011) Carabid beetles (Coleoptera: Carabidae) of the Midwestern United States: A review and synthesis of recent research. Terrestrial arthropod reviews 4, 63-94. https://doi.org/10.1163/187498311X565606\nMagura, T. (2002) Carabids and forest edge: spatial pattern and edge effect. Forest Ecology and Management 157, 23-37. https://doi.org/10.1016/S0378-1127(00)00654-X\nPearce, J.L., Venier, L.A. (2006) The use of ground beetles (Coleoptera: Carabidae) and spiders (Araneae) as bioindicators of sustainable forest management: A review. Ecological Indicators 6, 780-793. https://doi.org/10.1016/j.ecolind.2005.03.005\nSauberer, N., Zulka, K.P., Abensperg-Traun, M., Berg, H.-M., Bieringer, G., Milasowszky, N., Moser, D., Plutzar, C., Pollheimer, M., Storch, C. (2004) Surrogate taxa for biodiversity in agricultural landscapes of eastern Austria. Biological Conservation 117, 181-190. https://doi.org/10.1016/S0006-3207(03)00291-X\nSchimel, D., Hargrove, W., Hoffman, F., MacMahon, J. (2007) NEON: a hierarchically designed national ecological network. Frontiers in Ecology and the Environment 5, 59-59. https://doi.org/10.1890/1540-9295(2007)5[59:NAHDNE]2.0.CO;2\nSchimel, D., Keller, M., Berukoff, S., Hufft, R., Loescher, H., Powell, H., Kampe, T., Moore, D., Gram, W. (2011) NEON Science Strategy: Enabling Continental-Scale Ecological Forecasting. https://www.neonscience.org/sites/default/files/basic-page-files/NEON_Strategy_2011u2_0.pdf"
  },
  {
    "objectID": "Participation.html",
    "href": "Participation.html",
    "title": "6  Participation",
    "section": "",
    "text": "Participation requires that one contact person from each team:\n\nComplete a REGISTRATION for each forecast theme you are participating in and each model you are contributing within a theme\n\nThe contact person agrees to the participation agreement below on behalf of the team\n\nSubmit forecast netCDF or csv file(s)\n\nProvide the metadata xml file documenting the forecast\n\nOne contact person should register on behalf of their team. That contact person will be asked to provide the group members’ names, emails, and affiliations so that everyone in the group can receive an invitation to join the Challenge theme Slack channel and access group resources.\nTeams are allowed and encouraged to join the challenge after the start date of each Challenge theme because there are multiple deadlines to submit forecasts. However, only forecasts submitted by each submission deadline will be officially scored.\n\n\n\nTeams can be individuals or groups. They can represent institutions or organizations. You will have 25 characters for a team name (e.g., “EFI Null Model”) and 10 characters for the team name ID (no spaces allowed; e.g., “EFI_Null”).\nThe registration includes team categories (e.g., undergraduate only, graduate only, multi-institution, etc).\nIf your team wants to submit multiple forecasts, please register a different team name for each model . If there are two different time steps in a challenge theme (e.g., the terrestrial carbon flux theme has a 30-minute and 1-day option), register each as separate teams.\n\n\n\nOnce your team is registered, everyone listed will receive an email with an invitation to join the EFI Slack group and the #neon4cast-theme channel. You will also receive details about the GitHub repository associated with the theme your team is registered for.\nWe strongly encourage participants to use the Challenge theme Slack channels to ask questions, discuss ideas and challenges, and share resources. Overall, we strongly encourage a collegial approach to the Challenge – this is a friendly competition to move the field forward and bring more people into the community, not a cutthroat competition to win by denying other teams useful information.\nGitHub repositories for each Challenge theme will be available with helper code and an example workflow (null models). We encourage teams to contribute code to these repositories (via Pull Request) if they develop additional helper code. This is especially important if an individual or group is going to add additional data constraints to their forecast. Remember, the use of data external to NEON is allowed and encouraged so long as it is publicly available and other teams are notified about it. Also, while most anything could be used to calibrate parameters and constrain initial conditions, only other forecasts (e.g. weather) can be used as drivers/covariates during the actual forecast period.\n\n\n\nTeams are highly encouraged to publicly archive the code they are using for their forecast models and workflows. Information about where models are archived would be included in your metadata XML.\nTeams are also encouraged to use Docker or Singularity to containerize their models & workflows. EFI conventions for containerizing forecasts are still being developed, but our aim (particularly in later years of the forecast challenge) is to be able to provide shared cyberinfrastructure that makes it easier for teams to automate containerized forecasts. Containers will also facilitate Challenge themes interested in performing post-hoc analyses, such as uncertainty quantification and sensitivity analysis.\n\n\n\nWe are currently working with CyVerse for access to computational resources for teams that require resources not available through home institutions. We will update with more details as they become available."
  },
  {
    "objectID": "Participation.html#participation-agreement",
    "href": "Participation.html#participation-agreement",
    "title": "6  Participation",
    "section": "6.2 Participation agreement",
    "text": "6.2 Participation agreement\nAll participants agree to have their forecast posted in real-time on the NEON Ecological Forecast Challenge Dashboard and potentially published in a scientific journal. The manuscripts describing the accuracy of forecasts across teams will be coordinated by the Ecological Forecasting Initiative Research Coordination Network and authorship will be extended to members of each team with an opt-in policy.\nIf a publication is generated by a forecast team, we ask that the manuscript acknowledge the Ecological Forecasting Initiative Research Coordination Network and its support from the National Science Foundation (DEB-1926388)."
  },
  {
    "objectID": "Participation.html#neon-data-use",
    "href": "Participation.html#neon-data-use",
    "title": "6  Participation",
    "section": "6.3 NEON Data Use",
    "text": "6.3 NEON Data Use\nNEON data products, software, and derivatives thereof are freely available for use when accompanied by appropriate disclaimers, acknowledgments, and data citations, defined in the NEON data use policy.\nThe video below explains how to download and utilize NEON data for the Challenge. The video was recorded for the 2021 Early Career Annual Meeting"
  },
  {
    "objectID": "Participation.html#additional-data-options",
    "href": "Participation.html#additional-data-options",
    "title": "6  Participation",
    "section": "6.4 Additional data options",
    "text": "6.4 Additional data options\nIndividuals and groups may create forecasts that use other publicly available data in addition to the NEON data, so long as other teams participating in the challenge are notified about the existence of the data via the Challenge theme’s Slack channel. Teams are encouraged to make available the code they are using to access, download, and process any additional data constraints they are using, ideally via a pull request to each Challenge Github repo.\nWhen considering the use of data in forecasts it is important to distinguish data that are being used as drivers/covariates during each forecast from data being used to constrain model structure, parameters, initial conditions, and error distributions. While the latency of NEON data requires that some of our forecast will be (fully or partly) hindcasts, all forecasts should be run as if they are true forecasts – you cannot use any observed data as a driver/covariate or constraint during the forecast period itself as that info would not have been available at the forecast start date. For example, if you find that a particular variable is a useful covariate during the model development & calibration period (e.g. soil temperature) then you would need to find or make a forecast of that variable if you want to use it as a covariate. Teams using meteorological covariates should use the shared meteorological driver data provided by EFI (see Shared Forecast Drivers).\nAs an example of potentially useful external data, each NEON site has subsets of various remote sensing products that are hosted on the ORNL DAAC (ORNL DAAC subsets). These include:\nMODIS collection 6: LAI, FPAR, burned area, surface reflectance, land surface temperature, vegetation indices (NDVI, EVI), modeled ET, GPP, NPP.\nVIIRS collection 1: surface reflectance, vegetation indices, LAI, FPAR, land surface temperature,\nSMAP: modeled NEE, GPP, Rh, SOC\nDaymet: daily surface weather data\nThe video below demonstrates how to access meteorological covariate data for the Challenge. The video was recorded for the 2021 Early Career Annual Meeting"
  },
  {
    "objectID": "Submission-Instructions.html",
    "href": "Submission-Instructions.html",
    "title": "7  Submission Instructions",
    "section": "",
    "text": "The following provides the requirements for the format of the forecasts that will be submitted. It is important to follow these format guidelines in order for your submitted forecasts to pass a set of internal checks that allow the forecast to be visualized on the NEON Ecological Forecast Challenge dashboard and evaluated with the scoring process."
  },
  {
    "objectID": "Submission-Instructions.html#steps-to-submitting",
    "href": "Submission-Instructions.html#steps-to-submitting",
    "title": "7  Submission Instructions",
    "section": "7.1 Steps to submitting",
    "text": "7.1 Steps to submitting\nWe provide an overview of the steps for submitting with the details below:\n\nGenerate forecast with required columns. There are three options for the file format described below.\n\nWrite forecast to a file that follows the standardized naming format.\n\nGenerate the metadata. Do you best to fill it out but if you are having trouble please submit what you have. Don’t let metadata submission get in the way of submitting a forecast.\n\nSubmit (i.e., upload) forecast and metadata."
  },
  {
    "objectID": "Submission-Instructions.html#step-1-forecast-format",
    "href": "Submission-Instructions.html#step-1-forecast-format",
    "title": "7  Submission Instructions",
    "section": "7.2 Step 1: Forecast format",
    "text": "7.2 Step 1: Forecast format\nThere are two key options for the format. First, the file can be either in a csv or a netcdf format. Second the file can represent uncertainty using an ensemble column or both a family and parameter column. The ensemble column uses an integer to individual each ensemble member or MCMC member that represent forecast uncertainty. The family column uses the words normal to designate a normal distribution and the parameter column must have values of mean and sd for each forecasted variable, site_id, and time.\n\n7.2.1 Ensemble CSV\n\ntime: forecast timestamp\nstart_time: The start of the forecast; this should be 0 times steps in the future. This should only be one value of start_time in the file\nsite_id: NEON code for site\nensemble integer value for forecast replicate within the year and month (i.e. ensemble member or MCMC sample);\nvariable: standardized variable name from the theme\npredicted: forecasted value\n\nThe time unit (i.e., date or date-time) should correspond to the time unit of the theme specific target file (see Theme description).\nHere is an example of a forecast in the Ensemble:\n\n#readr::read_csv(\"https://data.ecoforecast.org/neon4cast-forecasts/phenology/phenology-2022-08-16-persistence.csv.gz\", show_col_types = FALSE)\n\n\n\n7.2.2 Distribution CSV\n\ntime: forecast timestamp\nstart_time: The start of the forecast; this should be 0 times steps in the future. This should only be one value of start_time in the file\nsite_id: NEON code for site\nfamily name of probability distribution that is described by the parameter values in the parameter column; only normal is currently allowed\nparameter required to be the string mean or sd (see note below about statistic column).\nvariable: standardized variable name from the theme\npredicted: forecasted value for mean or standard deviation\n\nThe time unit (i.e., date or date-time) should correspond to the time unit of the theme specific target file (see Theme description).\n\n#readr::read_csv(\"https://data.ecoforecast.org/neon4cast-forecasts/aquatics/aquatics-2022-08-06-climatology.csv.gz\", show_col_types = FALSE)\n\n\n\n7.2.3 Netcdf\nA netcdf should have the following variables\n\ntime: The start of the forecast\nsite_id: NEON code for site\nensemble integer value for forecast replicate within the year and month (i.e. ensemble member or MCMC sample);\n\nand include additional variables with names that correspond to the theme-specific standardized variables. For example, a netcdf from the aquatics theme would have temperature, oxygen, and chla variables.\nThe order of dimensions on forecast variables should be: time, site, and ensemble. The netcdf format should only be used for ensemble-based forecasts.\nThe time unit (i.e., date or date-time) should correspond to the time unit of the theme specific target file (see Theme description)\nThe global attributed in the netcdf must include the start_time variable, which is the start of the forecast (should be 0 times steps in the future)."
  },
  {
    "objectID": "Submission-Instructions.html#step-2-file-name",
    "href": "Submission-Instructions.html#step-2-file-name",
    "title": "7  Submission Instructions",
    "section": "7.3 Step 2: File name",
    "text": "7.3 Step 2: File name\nthe correct naming convention is critical for the automated processing of submissions\nTeams will submit their forecasts as a single netCDF or csv file with the following naming convention:\ntheme_name-year-month-day-team_name_ID.csv (or with a .csv.gz extension if compressing)\nor\ntheme_name-year-month-day-team_name_ID.nc\n\nThe theme_name options are: terrestrial_daily, terrestrial_30min, aquatics, beetles, ticks, or phenology.\n\nThe year, month, and day are the year, month, and day of the first forecast (horizon = 1). For example, if a forecast starts today and tomorrow is the first forecasted day, horizon = 1 would be tomorrow, and used in the file name.\n\nteam_name_ID is the code for the team name that is specified in the registration (team_name_ID has no spaces in it)."
  },
  {
    "objectID": "Submission-Instructions.html#step-3-metadata-format",
    "href": "Submission-Instructions.html#step-3-metadata-format",
    "title": "7  Submission Instructions",
    "section": "7.4 Step 3: Metadata format",
    "text": "7.4 Step 3: Metadata format\nEach submission requires a metadata file to be submitted. The metadata file must have the same name as the submitted forecast, but with the .xml extension.\ntheme_name-year-month-day-team_name_ID.xml\nMetadata files should be uploaded with the forecast files.\nThe metadata standard has been designed by the Ecological Forecasting Initiative and is built off the widely used Ecological Metadata Language (EML).\nTo help support metadata generation, we have created a function in the neon4cast package (generate_metadata()) and a guide for completing the metadata is in ?sec-metadata.\nThe license for the forecast output is required to be from the following Creative Commons License options: CC BY, CC BY-SA, CC BY-NC, CC BY-NC-SA. While we recommend a CC BY license, teams may use less permissive CC licenses if more appropriate. The license entry can be the CC option (i.e., CC BY) and a web link to the full CC license (e.g., https://creativecommons.org/licenses/by/4.0/)\nWe recommend teams read the full metadata standard description for definitions and more information, and in particular that they look at the example vignettes, which demonstrate the standard being used. Note that these Standards are a work in progress. If you find issues as you are applying them, let us know at eco4cast.initaitive@gmail.com."
  },
  {
    "objectID": "Submission-Instructions.html#step-4-submission-process",
    "href": "Submission-Instructions.html#step-4-submission-process",
    "title": "7  Submission Instructions",
    "section": "7.5 Step 4: Submission process",
    "text": "7.5 Step 4: Submission process\nIndividual forecast (csv, netCDF) and metadata (xml) files can be uploaded any time before the specific deadlines as defined by each theme. Only the most recent files will be scored.\nThe correct file name and format is critical for the automated processing of submissions\nTeams will submit their forecast netCDF or csv files manually through the challenge website or with an R script.\nWe have developed a function called submit in the neon4cast package handles submission process.\n\nneon4cast::submit(forecast_file = \"theme_name-forecast-year-month-day-team_name.csv\",\n                  metadata = \"theme_name-year-month-day-team_name.xml\")\n\nAlternatively, if you using another programming language, you can submit using AWS S3-like tools (i.e., aws.s3 R package) to the neon4cast-submissions bucket at the data.ecoforecast.org endpoint.\nSubmissions need to adhere to the forecast format that is provided above, including the file naming convention. Our cyberinfastructure automatically evaluates forecasts and relies on the expected formatting. Contact eco4cast.initiative@gmail.com if you experience technical issues with submitting.\nNote: If you have used AWS in the past you might have credential files in an .aws folder in your home directory that will cause an error when you try to upload to a non-AWS bucket. If you encounter this error you may need to rename your credentials files so put_object doesn’t try to read them."
  },
  {
    "objectID": "Submission-Instructions.html#validating-submission",
    "href": "Submission-Instructions.html#validating-submission",
    "title": "7  Submission Instructions",
    "section": "7.6 Validating submission",
    "text": "7.6 Validating submission\nYou can check the status of your submission using the following function in the neon4cast package\n\nneon4cast::check_submission(\"phenology-2022-02-07-persistence.nc\")\n\nA successful submission can be found at the following links within 2 hours of submissions\nWe run a validator script when processing the submissions. If your submission does not meet the file standards above, you can run a function that provides information describing potential issues. The forecast file needs to be in your local working directory or you need to provide a full path to the file\n\nneon4cast::forecast_output_validator(\"phenology-2022-02-07-persistence.nc\")"
  },
  {
    "objectID": "Submission-Instructions.html#visualizing-submissions",
    "href": "Submission-Instructions.html#visualizing-submissions",
    "title": "7  Submission Instructions",
    "section": "7.7 Visualizing submissions",
    "text": "7.7 Visualizing submissions\nPlots of submissions and table of scores can be found at our dashboard"
  },
  {
    "objectID": "Submission-Instructions.html#video-describing-how-to-submit-to-the-challenge",
    "href": "Submission-Instructions.html#video-describing-how-to-submit-to-the-challenge",
    "title": "7  Submission Instructions",
    "section": "7.8 Video Describing How to Submit to the Challenge",
    "text": "7.8 Video Describing How to Submit to the Challenge\nThis video was recorded for the 2021 Early Career Annual Meeting"
  },
  {
    "objectID": "Metadata.html",
    "href": "Metadata.html",
    "title": "8  Submission Metadata Generation",
    "section": "",
    "text": "The challenge organizer have created tools to assist in generating the metadata that describes a forecast submission"
  },
  {
    "objectID": "Metadata.html#team-information",
    "href": "Metadata.html#team-information",
    "title": "8  Submission Metadata Generation",
    "section": "8.1 Team information",
    "text": "8.1 Team information\n\nteam_list <- list(list(individualName = list(givenName = \"Quinn\", \n                                             surName = \"Thomas\"),\n                       organizationName = \"Virginia Tech\",\n                       electronicMailAddress = \"rqthomas@vt.edu\"),\n                  list(individualName = list(givenName = \"Robert\", \n                                             surName = \"Thomas\"),\n                       organizationName = \"Virginia Tech\"))"
  },
  {
    "objectID": "Metadata.html#model-description",
    "href": "Metadata.html#model-description",
    "title": "8  Submission Metadata Generation",
    "section": "8.2 Model Description",
    "text": "8.2 Model Description\n\n8.2.1 Initial conditions\nUncertainty in the initialization of state variables (Y). Initial condition uncertainty will be a common feature of any dynamic model, where the future state depends on the current state, such as population models, process-based biogeochemical pool & flux models, and classic time-series analysis.\n\n\n8.2.2 Drivers\nUncertainty in model drivers, covariates, and exogenous scenarios (X). Driver/covariate uncertainties may come directly from a data product, as a reported error estimate or through driver ensembles, or may be estimated based on sampling theory, cal/val documents, or some other source.\ncomplexity = Number of different driver variables or covariates in a model. For example, in a multiple regression this would be the number of X’s. For a climate-driven model, this would be the number of climate inputs (temperature, precip, solar radiation, etc.).\n\n\n8.2.3 Parameters\nUncertainty in model parameters (). For most ecological processes the parameters (a.k.a. coefficients) in model equations are not physical constants but need to be estimated from data.\ncomplexity = number of estimated parameters/coefficients in a model at a single point in space/time. For example, in a regression it would be the number of beta’s.\n\n\n8.2.4 Random effects\ncomplexity = number of random effect terms, which should be equivalent to the number of random effect variances estimated. For example, if you had a hierarchical univariate regression with a random intercept you would have two parameters (slope and intercept) and one random effect (intercept). At the moment, we are not recording the number of distinct observation units that the model was calibrated from. So, in our random intercept regression example, if this model was fit at 50 sites to be able to estimate the random intercept variance, that would affect the uncertainty about the mean and variance but that ‘50’ would not be part of the complexity dimensions.\n\n\n8.2.5 Process error\nDynamic uncertainty in the process model attributable to both model misspecification and stochasticity. Pragmatically, this is the portion of the residual error from one timestep to the next that is not attributable to any of the other uncertainties listed above, and which typically propagates into the future.\ncomplexity = dimension of the error covariance matrix. So if we had a n x n covariance matrix, n is the value entered for complexity. Typically n should match the dimensionality of the initial_conditions unless there are state variables where process error is not being estimated or propagated\n\n\n8.2.6 Observation error\nUncertainty in the observations of the output variables. Note that many statistical modeling approaches do not formally partition errors in observations from errors in the modeling process, but simply lump these into a residual error. Because of this we make the pragmatic distinction and ask that residual errors that a forecast model do not directly propagate into the future be recorded as observation errors. Observation errors now may indeed affect the initial condition uncertainty in the next forecast, but we consider this to be indirect.\ncomplexity = dimension of the error covariance matrix. So if we had a n x n covariance matrix, n is the value entered for complexity. Typically n should match the dimensionality of the initial_conditions unless there are state variables where process error is not being estimated or propagated\n\n\n8.2.7 Progation\npropogation = method for generating uncertainty in the model predictions to represent uncertainty in initial conditions\n\n\n8.2.8 assimilation\nassimilation = how data is used to estimate the uncertainty in initial conditions"
  },
  {
    "objectID": "Metadata.html#example-r-list",
    "href": "Metadata.html#example-r-list",
    "title": "8  Submission Metadata Generation",
    "section": "8.3 Example R “list”",
    "text": "8.3 Example R “list”\n\nmodel_metadata = list(\n  forecast = list(\n    model_description = list(\n      forecast_model_id =   # model identifier:\n      name =  #Name or short description of model\n      type =  #General type of model empirical, machine learning, process\n      repository =  # put your GitHub Repository in here\n    ),\n    initial_conditions = list(\n      status = , #options: absent, present, data_driven, propagates, assimilates\n      complexity = , #How many models states need initial conditions; delete if status = absent\n     #Delete list below if status = absent, present, or data_driven\n      propagation = list(\n        type =  , #How does your model propogate initial conditions ('ensemble' is most common)\n        size =  #number of ensemble members\n      ),\n      #Delete list below UNLESS status = assimilates\n      assimilation = list(\n        type = , #description of assimilation method\n        reference = , #reference for assimilation method\n        complexity =  #number of states that are updated with assimilation\n      )\n    ),\n    drivers = list(\n      status = , #options: absent, present, data_driven, propagates, assimilates\n      complexity = , #How many drivers are used? Delete if status = absent\n      #Delete list below if status = absent, present, or data_driven\n      propagation = list( \n        type = , #How does your model propogate driver (ensemble or MCMC is most common\n        size = #number of ensemble or MCMC members\n        ) \n    ),\n    parameters = list(\n      status = , #options: absent, present, data_driven, propagates, assimilates\n      complexity = , #How many parameters are included?; Delete if status = absent\n      #Delete list below below blank if status = absent, present, or data_driven\n      propagation = list(\n        type = , #how does your model propogate parameter uncertainity?\n        size = ),\n      #Delete list below UNLESS status = assimilates  \n      assimilation = list(\n        type = , #description of assimilation method\n        reference = , #reference for assimilation method\n        complexity =  #number of states that are updated with assimilation\n      )\n    ),\n    random_effects = list(\n      status = , #options: absent, present, data_driven, propagates, assimilates\n      complexity = ,  #Delete if status = absent\n      #Delete list below if status = absent, present, or data_driven\n      propagation = list(\n        type = , #How does your model propogate random effects (ensemble or MCMC is most common)\n        size =  #number of ensemble or MCMC members\n      ),\n      #Delete list below NLESS status = assimilates\n      assimilation = list(\n        type = , #description of assimilation method\n        reference = , #reference for assimilation method\n        complexity =  #number of states that are updated with assimilation\n      )\n    ),\n    process_error = list(\n      status = , #options: absent, present, data_driven, propagates, assimilates\n      complexity = , #Delete if status = absent\n      #Delete the list below below blank if status = absent, present, or data_driven\n      propagation = list(\n        type = , #How does your model propagate random effects uncertainty (ensemble or MCMC is most common) \n        size =  #How many ensemble or MCMC members\n      ),\n      #Delete the list below UNLESS status = assimilates\n      assimilation = list(\n        type = , #Name of data assilimilation method\n        reference = , #Reference for data assimilation method\n        complexity = , #Number of states assimilate\n        covariance = , #TRUE OR FALSE\n        localization =  #TRUE OR FALSE\n      )\n    ),\n    obs_error = list(\n      status = , #options: absent, present, data_driven, propagates, assimilates\n      complexity = , #Delete if status = absent\n      #Delete the list below below blank if status = absent, present, or data_driven\n      propagation = list(\n        type = , #How does your model propagate random effects uncertainty (ensemble or MCMC is most common) \n        size =  #How many ensemble or MCMC members\n      )\n    )\n  )\n)\n\nThe metadata XML can be generated using the the forecast_file (path and filename of forecast), team_list (see above), and mode1_metadata (see above). The neon4cast::generate_metadata() function will take this information add additional metdata to complete the XML. The forecast_file must following the format described at [Forecast format]\n\nneon4cast::generate_metadata(forecast_file, team_list, model_metadata)"
  },
  {
    "objectID": "Metadata.html#example",
    "href": "Metadata.html#example",
    "title": "8  Submission Metadata Generation",
    "section": "8.4 Example",
    "text": "8.4 Example\nBelow is an example of the model_metadata for the terrestrial daily climatology model. It is a simple model that forecasts the carbon exchange (NEE) and evaporation (LE) is equal to the mean and standard deviation of the historical data for that day-of-year. Since it is a simple model, many of the descriptions of model uncertainty are absent.\n\nmodel_metadata = list(\n  forecast = list(\n    model_description = list(\n      forecast_model_id =  \"climatology\", \n      name = \"Day-of-year mean\", \n      type = \"empirical\",  \n      repository = \"https://github.com/eco4cast/neon4cast-terrestrial/blob/master/03_terrestrial_flux_daily_null.R\" \n    ),\n    initial_conditions = list(\n      status = \"absent\"\n    ),\n    drivers = list(\n      status = \"absent\"\n    ),\n    parameters = list(\n      status = \"absent\"\n    ),\n    random_effects = list(\n      status = \"absent\"\n    ),\n    process_error = list(\n      status = \"data_driven\",\n      complexity = 2\n    ),\n    obs_error = list(\n      status = \"absent\"\n    )\n  )\n)"
  },
  {
    "objectID": "Evaluation.html",
    "href": "Evaluation.html",
    "title": "9  Evaluation",
    "section": "",
    "text": "Forecasts will be evaluated at each site and forecast horizon (i.e., time-step into the future), and a summary score will be assigned evaluating overall performance of all forecast submissions across sites. Forecasts will also be compared to a null model.\nForecast evaluation results will be presented for all submitted models together and separately for each team category: undergraduate student only team, graduate student only team, post-doc only team, single institution team, multi-institution team, international team (team with individuals from at least two countries)."
  },
  {
    "objectID": "Evaluation.html#results",
    "href": "Evaluation.html#results",
    "title": "9  Evaluation",
    "section": "9.1 Results",
    "text": "9.1 Results\nPreliminary results will be distributed using the NEON Ecological Forecast Challenge dashboard and the neon4cast::combined_scores() function (where x is an optional argument that is the theme name)\n\nscore_df <- neon4cast::combined_scores(x = \"phenology\")\n\nWe intend to write a joint manuscript synthesizing forecasts, authorship will be extended to members of each team with an opt-in policy. Teams are welcome to publish results from their model at any time. If a publication is generated we encourage the manuscript to acknowledge the Ecological Forecasting Research Coordination Network and its support from the National Science Foundation (DEB-1926388)."
  },
  {
    "objectID": "Evaluation.html#scoring-metric-continuous-ranked-probability-score",
    "href": "Evaluation.html#scoring-metric-continuous-ranked-probability-score",
    "title": "9  Evaluation",
    "section": "9.2 Scoring Metric: Continuous Ranked Probability Score",
    "text": "9.2 Scoring Metric: Continuous Ranked Probability Score\nForecasts will be scored using the continuous ranked probability score (CRPS), a proper scoring rule for evaluating forecasts presented as distributions or ensembles (Gneiting & Raftery 2007). The CRPS compares the forecast probability distribution to that of the validation observation and assigns a score based on both the accuracy and precision of the forecast. We will use the ‘crps_sample’ function from the scoringRules package in R to calculate the CRPS for each forecast.\nWe will generate a combined score for all locations and forecast horizons. Forecasts will also be evaluated using the CRPS at each time-step in the forecast horizon and each location included in the forecasts.\nImportantly, we use the convention for CRPS where zero is lowest and best possible score, therefore teams want to achieve the lowest score. CPRS can be also expressed as a negative number with zero as highest and best possible score (Gneiting & Raftery 2007). The scoringRules package that we use follows the 0 or greater convention.\n\n9.2.1 Example of a CRPS calculation from an ensemble forecast\nThe following uses Equation 2 in Jordan, Kruger, and Lerch 2018\n\n\n\nEquation 1 from Jordan, Kruger, and Lerch 2018.\n\n\nFirst, create a random sample from a probability distribution. This is the “forecast” for a particular point in time. For simplicity, we will use a normal distribution with a mean of 8 and standard deviation of 1\n\nx <- rnorm(1000, mean = 8, sd = 1.0)\n\nSecond, we have our data point (i.e., the target). We will set it to zero as well\n\ny <- 8\n\nNow calculate CRPS using Equation 2\n\ns <- 0\nfor(i in 1:length(x)){\n  for(j in 1:length(x)){\n    s <- s + abs(x[i] - x[j])\n  }\n}\ncrps_equation_2 <- mean(abs(x - y)) - s / (2 * length(x)^2)\ncrps_equation_2\n\n[1] 0.2263041\n\n\nNow calculate using the crps_sample() function in the scoringRules package\n\ncrps_sample(y = y, dat = x)\n\n[1] 0.2263041\n\n\n\n\n9.2.2 Exploring the scoring surface\nNow lets see how the CRPS changes as the mean and standard deviation of the forecasted distribution change\nFirst, set vectors for the different mean and SD values we want to explore\n\nsample_mean <- seq(4, 12, 0.1)\nsample_sd <- seq(0.1, 10, 0.1)\n\nSecond, set our observed value to 8 for simplicity\n\ny <- 8\n\nNow calculate the CRPS at each combination of forest mean and SD\n\ncombined <- array(NA, dim = c(length(sample_mean), length(sample_sd)))\nfor(i in 1:length(sample_mean)){\n  for(j in 1:length(sample_sd)){\n    sample <- rnorm(10000, sample_mean[i], sample_sd[j])\n    combined[i, j] <- crps_sample(y = y, dat = sample)\n  }\n}\n\nFinally, visualize the scoring surface with the observed value represented by the red line\n\ncontour(x = sample_mean, y = sample_sd, z = as.matrix(combined),nlevels = 20, xlab = \"Mean\", ylab = \"SD\")\nabline(v = y, col = \"red\")\n\n\n\n\nThe contour surface highlights the trade-off between the mean and standard deviation.\n\n\n9.2.3 CRPS from the Normal Distribution\nIf the distributional forecast is a normal distribution represented by a mean \\(\\mu\\) and standard deviation \\(\\sigma\\), an ensemble of predictions is not needed to evaluate CRPS because we can take advantage of the analytic solution to CRPS under the normal assumption (Equation 4 from Gneiting et al. 2005)\nEquation 5 from Gneiting et al. (2005) gives\n\\[\\begin{align*}\nCRPS(N(\\mu, \\sigma^2) | y) = \\sigma \\left( \\frac{y - \\mu}{\\sigma} \\left( 2 \\Phi\\left(  \\frac{y - \\mu}{\\sigma} \\right) - 1 \\right)  + 2 \\phi \\left(  \\frac{y - \\mu}{\\sigma} \\right) - \\frac{1}{\\sqrt{\\pi}} \\right)\n\\end{align*}\\]\nfor \\(\\Phi(\\cdot)\\) and \\(\\phi(\\cdot)\\) the standard normal CDF and PDF, respectively. Therefore, if the forecast distribution is truly a normal distribution (often this isn’t true in forecasts that only report a mean and sd) a simplified score can be applied as follows:\n\nsample_mean <- seq(4, 12, 0.1)\nsample_sd <- seq(0.1, 10, 0.1)\n\ncombined_norm <- array(NA, dim = c(length(sample_mean), length(sample_sd)))\nfor(i in 1:length(sample_mean)){\n  for(j in 1:length(sample_sd)){\n    combined_norm[i, j] <- crps_norm(y = y, mean = sample_mean[i], sd = sample_sd[j])\n  }\n}\n\nFinally, visualize the scoring surface with the observed value represented by the red line.\n\ncontour(x = sample_mean, y = sample_sd, z = as.matrix(combined_norm), nlevels = 20, xlab = \"Mean\", ylab = \"SD\")\nabline(v = y, col = \"red\")\n\n\n\n\nNote that at a given value of the sd, the lowest score is achieved at \\(\\mu = y\\) as shown for each of the blue lines where the minimum value of the score across each blue line is at the red line. This behavior makes sense because the CRPS is a score that rewards accuracy and precision. Thus, for any given level of precision (represented by the standard deviation), CRPS is optimized by producing the most accurate prediction of the distribution’s location.\n\ncontour(x = sample_mean, y = sample_sd, z = as.matrix(combined_norm), nlevels = 20, xlab = \"Mean\", ylab = \"SD\")\nabline(v = y, col = \"red\")\nabline(h = 2.5, col = \"blue\")\nabline(h = 4.3, col = \"blue\")\nabline(h = 6.8, col = \"blue\")\n\n\n\n\nInterestingly, for a given mean \\(\\mu \\neq y\\) we find a pattern that makes intuitive sense given the goal of CRPS to produce forecasts that are both accurate and precise. For a given amount of bias in the prediction (i.e., given a \\(\\mu \\neq y\\)), the optimal score is achieved by a standard deviation that slightly larger than the bias.\n\nlayout(matrix(1:4, 2, 2, byrow = TRUE))\n## plots for mu = 7\nmu <- 7\ncontour(x = sample_mean, y = sample_sd, z = as.matrix(combined_norm), nlevels = 20, xlab = \"Mean\", ylab = \"SD\", main = paste0(\"CRPS contour given mu = \", mu))\nabline(v = mu, col = \"red\")\nmin_sd <- sample_sd[which.min(crps_norm(y, mean = mu, sd = sample_sd))]\nabline(h = min_sd, col = \"blue\")\nplot(sample_sd, crps_norm(y, mean = mu, sd = sample_sd), type = 'l', main = paste0(\"CRPS profile given mu = \", mu))\nabline(v = min_sd, col = \"blue\")\n## plots for mu = 11\nmu <- 11\ncontour(x = sample_mean, y = sample_sd, z = as.matrix(combined_norm), nlevels = 20, xlab = \"Mean\", ylab = \"SD\", main = paste0(\"CRPS contour given mu = \", mu))\nabline(v = mu, col = \"red\")\nmin_sd <- sample_sd[which.min(crps_norm(y, mean = mu, sd = sample_sd))]\nabline(h = min_sd, col = \"blue\")\nplot(sample_sd, crps_norm(y, mean = mu, sd = sample_sd), type = 'l', main = paste0(\"CRPS profile given mu = \", mu))\nabline(v = min_sd, col = \"blue\")\n\n\n\n\nNext, we plot the relationship between a given value of \\(\\mu\\) and the \\(\\sigma\\) that produces the optimal CRPS. This looks like a linear relationship.\n\noptimal_sd <- rep(0, length(sample_mean))\nfor (i in 1:length(sample_mean)) {\n  optimal_sd[i] <- sample_sd[which.min(crps_norm(y, mean = sample_mean[i], sd = sample_sd))]\n}\nplot(sample_mean, optimal_sd, type = 'l')\n\n\n\n\nLet’s estimate the slope of the relationship. It looks like the optimal \\(sd\\) for a normal distribution forecast that is biased by \\(|y - \\mu|\\) is \\(sd = 1.2|y - \\mu|\\) which makes sense as this would put the true value in a region of high probability.\n\ncoef(lm(optimal_sd[sample_mean > 0] ~ sample_mean[sample_mean > 0]))\n\n                 (Intercept) sample_mean[sample_mean > 0] \n                2.430864e+00                -1.688326e-16"
  },
  {
    "objectID": "Evaluation.html#sec-nulls",
    "href": "Evaluation.html#sec-nulls",
    "title": "9  Evaluation",
    "section": "9.3 Null forecast",
    "text": "9.3 Null forecast\nAll forecasts will be compared to a null forecast produced by a simple historical-means calculation or a random walk. The GitHub repository for each theme has the code for the null model.\nTicks: https://github.com/eco4cast/neon4cast-ticks/blob/master/03_nullFitAndForecast.R\nTerrestrial (Daily): https://github.com/eco4cast/neon4cast-terrestrial/blob/master/03_terrestrial_flux_daily_null.R\nTerrestrial (30 minute): https://github.com/eco4cast/neon4cast-terrestrial/blob/master/04_terrestrial_flux_30min_clim.R\nBeetles: https://github.com/eco4cast/neon4cast-beetles/blob/master/03_forecast.R\nAquatics: https://github.com/eco4cast/neon4cast-aquatics/blob/master/03_generate_null_forecast_aquatics.R\nPhenology: https://github.com/eco4cast/neon4cast-phenology/blob/master/nullModel_randomWalk_main.R"
  },
  {
    "objectID": "Evaluation.html#forecast-submission-visualization-and-leaderboard",
    "href": "Evaluation.html#forecast-submission-visualization-and-leaderboard",
    "title": "9  Evaluation",
    "section": "9.4 Forecast Submission Visualization and Leaderboard",
    "text": "9.4 Forecast Submission Visualization and Leaderboard\nThe dashboard shows the forecast submissions by each team for each forecast theme by date and forecast variable."
  },
  {
    "objectID": "Evaluation.html#references",
    "href": "Evaluation.html#references",
    "title": "9  Evaluation",
    "section": "9.5 References",
    "text": "9.5 References\nGneiting, T., A.E. Raftery. 2007. Strictly proper scoring rules, prediction, and estimation. Journal of the American Statistical Association, 102(477): 359–378. https://doi.org/10.1198/016214506000001437\nJordan, A., F. Kruger, and S. Lerch 2018. Evaluating probabilistic forecasts with scoringRules. https://cran.r-project.org/web/packages/scoringRules/vignettes/article.pdf\nGneiting, T., A.E. Raftery, A.H. Westveld III, T. Goldman. 2005. Calibrated probabilistic forecasting using ensemble model output statistics and minimum CRPS estimation. Monthly Weather Review, 133(5): 1098-1118. https://doi.org/10.1175/MWR2904.1"
  },
  {
    "objectID": "Shared-Forecast-Drivers.html",
    "href": "Shared-Forecast-Drivers.html",
    "title": "10  Meteorology Inputs",
    "section": "",
    "text": "We are downloading, subsetting, and processing forecasted meteorology drivers for each NEON site. Currently, we have NOAA’s Global Ensemble Forecasting System (GEFS) V12 output available at the native time resolution and a 1 hr time resolution for each NEON site.\nThe following are important considerations when using the NOAA GEFS forecasts\nThe following meteorological variables are included:\nThe weather forecasts are available through an s3 bucket (see NOAA Global Ensemble Forecasting System below) and we provide an R functions code in the neon4cast package for downloading all the ensemble members for particular location, forecast cycle (00, 06, 12, or 18), and NEON site"
  },
  {
    "objectID": "Shared-Forecast-Drivers.html#noaa-global-ensemble-forecasting-system",
    "href": "Shared-Forecast-Drivers.html#noaa-global-ensemble-forecasting-system",
    "title": "10  Meteorology Inputs",
    "section": "10.1 NOAA Global Ensemble Forecasting System",
    "text": "10.1 NOAA Global Ensemble Forecasting System\n\n10.1.1 Stage 1\nAt each site, 31 ensemble member forecasts are provided at 3 hr intervals for the first 10 days, and 6 hr intervals for up to 35 days (840 hr horizon). Ensemble member 31 only extends 16-days in the future\nForecasts include the following variables:\n\nTMP: temperature (C)\n\nRH: Relative humidity (%)\n\nPRES: Atmospheric pressure (Pa)\n\nUGRD: U-component of wind speed (m/s)\n\nVGRD: V-component of wind speed (m/s)\n\nAPCP: Total precipitation in interval (kg/m^2)\n\nDSWRF: Downward shortwave radiation flux in interval (W/m^2)\n\nDLWRF: Downward longwave radiation flux in interval (W/m^2)\n\n\nGEFS forecasts are issued four times a day, as indicated by the start_date and cycle. Only forecasts at midnight, cycle = \"00\" extend for the full 840 hour horizon. Other cycles 06, 12, 18 are provided only 16-day ahead, as mostly being of interest for short-term forecasts. (Though users should note that other NOAA products provide more much accurate and higher resolution short term forecasts than GEFS - though without uncertainity from ensenble members)\nAll variables are given at height 2m above ground, surface, or 10 m above ground as indicated in height column. See https://www.nco.ncep.noaa.gov/pmb/products/gens/ for more details on GEFS variables and intervals.\nCommon ways to filter the data before running collect() include start_date, site_id, variable, and horizon.\n\nweather <- neon4cast::noaa_stage1()\n# 5.7M rows of data:\nweather |> \ndplyr::filter(start_date == \"2022-04-01\") |>\ndplyr::collect()\n\nNote: that noaa_stage1() defaults to the 00 cycle.\nIf you are using python tools (pyarrow) the endpoint is data.ecoforecast.org and the bucket is neon4cast-drivers/noaa/gefs-v12/stage1\n\n\n10.1.2 Stage 2\nStage 2 is a processed version of Stage 1 and involves the following transforms of the data that may be useful for some modeling approaches:\n\nFluxes are standardized to per second rates\n\nFluxes and states are interpolated to 1 hour intervals\n\n\nVariables are renamed to match CF conventions:\n\nTMP -> air_temperature (K)\n\nPRES -> air_pressure (Pa)\n\nRH -> relative_humidity (proportion)\n\nDLWRF -> surface_downwelling_longwave_flux_in_air (W/m^2)\n\nDSWRF -> surface_downwelling_shortwave_flux_in_air (W/m^2) \nAPCP -> precipitation_flux (kg/(m^2 s))\n\nVGRD -> eastward_wind (m/s)\n\nUGRD -> northward_wind (m/s)\n\n\n\nweather_1hr <- neon4cast::noaa_stage2()\nweather_1hr |> \ndplyr::filter(start_date == \"2022-04-01\" & site_id == \"BART\") |>\ndplyr::collect()\n\nNote: that noaa_stage2() defaults to the 00 cycle.\nIf you are using python tools (pyarrow) the endpoint is data.ecoforecast.org and the bucket is neon4cast-drivers/noaa/gefs-v12/stage2/parquet\n\n\n10.1.3 Stage 3\nStage 3 processing presents a ‘nowcast’ product by combining the most recent predictions from each available cycle. Product uses CF variable names and 1 hr interval. The resulting produce is single time-series for each ensemble member, rather than a set of time series from all the forecasts. Stage 3 can be viewed as the “historical” weather for site as simulated by NOAA GEFS. Stage 3 is useful for model training because it ensures that the magnitude and variability of the weather data used to train your model is similar to that in the NOAA GEFS weather forecast you may use as inputs to your forecast.\nStage 3 uses CF variable names and 1 hr interval (same at Stage 2)\n\nweather_stage3 <- neon4cast::noaa_stage3()\nweather_stage3 |> \ndplyr::filter(site_id == \"BART\") |>\ndplyr::collect()\n\nIf you are using python tools (pyarrow) the endpoint is data.ecoforecast.org and the bucket is neon4cast-drivers/noaa/gefs-v12/stage3/parquet"
  },
  {
    "objectID": "Shared-Forecast-Drivers.html#neon-observed",
    "href": "Shared-Forecast-Drivers.html#neon-observed",
    "title": "10  Meteorology Inputs",
    "section": "10.2 NEON Observed",
    "text": "10.2 NEON Observed\nThe observed weather at each NEON site as also available in the monthly released data products by NEON. We are downloading these data and providing through the following function\n\nneon <- arrow::s3_bucket(\"neon4cast-targets/neon\",\n                  endpoint_override = \"data.ecoforecast.org\",\n                  anonymous = TRUE)\n\nThe list of data tables that are available can be found using this command.\n\nneon$ls()\n\nAnd here is an example for accessing the triple aspirated temperature data product. See the data product (i.e., DP1.00003.001) in NEON data portal for more information about the table names.\n\ntaat <- arrow::open_dataset(neon$path(\"TAAT_30min-basic-DP1.00003.001\")) \n\nHere is an example showing how to download particular subsets of the data table.\n\nneon_temp <- taat |>\n  mutate(time = as.Date(startDateTime)) |>\n  group_by(siteID, time) |>\n  summarise(mean_tmp = mean(tempTripleMean, na.rm = TRUE),\n            min_tmp = min(tempTripleMinimum, na.rm = TRUE),\n            max_tmp = max(tempTripleMaximum, na.rm = TRUE)) |>\n  rename(site_id = siteID) |>\n  collect()"
  },
  {
    "objectID": "Shared-Forecast-Drivers.html#downloading-and-processing-of-noaa-gefs",
    "href": "Shared-Forecast-Drivers.html#downloading-and-processing-of-noaa-gefs",
    "title": "10  Meteorology Inputs",
    "section": "10.3 Downloading and processing of NOAA GEFS",
    "text": "10.3 Downloading and processing of NOAA GEFS\nThe code used to download and process the NOAA GEFS forecast from Amazon Web Services Registry of Open Data is available in the gefs4cast package found at github.com/eco4cast/gef4cast"
  },
  {
    "objectID": "Shared-Forecast-Drivers.html#timing-of-data-availability",
    "href": "Shared-Forecast-Drivers.html#timing-of-data-availability",
    "title": "10  Meteorology Inputs",
    "section": "10.4 Timing of data availability",
    "text": "10.4 Timing of data availability\nSee Chapter 11 for information on the time day that the NOAA data become available on our servers for use in the Challenge."
  },
  {
    "objectID": "CronTiming.html",
    "href": "CronTiming.html",
    "title": "11  Timing of Data Availability",
    "section": "",
    "text": "NOAA Stage 1 (3-6 hr intervals)\nUpdated hourly as data become available on Amazon Web Services For a given forecast that starts at 0 hour UTC (cycle = 0), the full 35-day horizon for all ensembles is available at ~ 4 am UTC on the following date. Stage 1 data are only available as a data frame using neon4cast::noaa_stage1() or as parquet files in the neon4cast-cast/drivers/noaa/gefs-v12/stage1 bucket at data.ecoforecast.org\nNOAA Stage 2 (1 hour intervals)\nUpdated daily once the full 35-day horizon for all ensembles has been downloaded in Stage 1. For a given forecast start date, the full 35-day horizon for all ensembles is available at ~ 5 am UTC on the following date. Stage 2 are available as a data frame using neon4cast::noaa_stage2(), as parquet files in the neon4cast-cast/drivers/noaa/gefs-v12/stage2/parquet bucket at data.ecoforecast.org, or as parquet files in the neon4cast-cast/drivers/noaa/gefs-v12/stage2/netcdfbucket at data.ecoforecast.org.\nNOAA Stage 3 (1 hour intervals)\nUpdated daily. For a given forecast start date, Stage 3 is updated to the current at ~ 11 am UTC each day. Stage 3 are available as a data frame using neon4cast::noaa_stage3(), as parquet files in the neon4cast-cast/drivers/noaa/gefs-v12/stage3/parquet bucket at data.ecoforecast.org, or as parquet files in the neon4cast-cast/drivers/noaa/gefs-v12/stage3/netcdfbucket at data.ecoforecast.org.\nTerrestrial targets\nTiming: updated daily between 9 and 10 am UTC.\nLatency: New data each day is from 5-day prior\nPhenology targets\nTiming: The phenology targets are at 2 pm UTC. Latency: New data each day is from 1-day prior\nAquatics targets\nTiming: Updated daily between 7 and 8 am UTC Latency: New data each day is from 2-days prior\nTick targets\nTiming: Appears monthly around the 15th Latency: New data is from ~300 days priors\nBeetles targets\nTiming: Appears monthly around the 15th Latency: New data is from ~60 days priors\nScored forecasts\nForecast scores are updated daily at 11 am UTC Latency: New scores are for 1-day prior\nForecasting submission processing\nSubmitted forecasts are processed every 2 hours."
  },
  {
    "objectID": "WorkflowExample.html",
    "href": "WorkflowExample.html",
    "title": "12  Example Forecast Workflow",
    "section": "",
    "text": "Here is an example of a complete workflow for generating a forecast submission to the Challenge. The example is for the aquatics theme and it forecasts water temperature and oxygen. The water temperature forecast uses a linear regression between air temperature and water temperature to predict water temperature in the future. It then uses the prediction of water temperature to predict oxygen water oxygen concentration by assuming that the oxygen is 100% saturated given the predicted temperature.\nTo generate the forecast we need to:\nTherefore we need to:\nEach of these steps are below"
  },
  {
    "objectID": "WorkflowExample.html#step-0-set-up-r-environment-and-directories",
    "href": "WorkflowExample.html#step-0-set-up-r-environment-and-directories",
    "title": "12  Example Forecast Workflow",
    "section": "12.1 Step 0: Set up R environment and directories",
    "text": "12.1 Step 0: Set up R environment and directories\nWe will be downloading NOAA forecasts from the Challenge s3 bucket and submitting to the s3 bucket. Therefore the AWS information is needed.\n\nlibrary(tidyverse)\nlibrary(neon4cast)\nlibrary(lubridate)\nlibrary(rMR)\nlibrary(arrow)\n\nDefine the date that the forecast starts. For demonstration purposes, we are setting the date to 2022-02-15. In a real-time application, use forecast_date <- Sys.Date()\n\nforecast_date <- lubridate::as_date(\"2022-02-15\")"
  },
  {
    "objectID": "WorkflowExample.html#step-0-define-team-name-and-team-members",
    "href": "WorkflowExample.html#step-0-define-team-name-and-team-members",
    "title": "12  Example Forecast Workflow",
    "section": "12.2 Step 0: Define team name and team members",
    "text": "12.2 Step 0: Define team name and team members\n\nteam_name <- \"air2waterSat\"\n\nteam_list <- list(list(individualName = list(givenName = \"Quinn\", \n                                             surName = \"Thomas\"),\n                       organizationName = \"Virginia Tech\",\n                       electronicMailAddress = \"rqthomas@vt.edu\"))"
  },
  {
    "objectID": "WorkflowExample.html#step-1-download-latest-target-data-and-site-description-data",
    "href": "WorkflowExample.html#step-1-download-latest-target-data-and-site-description-data",
    "title": "12  Example Forecast Workflow",
    "section": "12.3 Step 1: Download latest target data and site description data",
    "text": "12.3 Step 1: Download latest target data and site description data\nThese targets are updated when new data is available from NEON.\n\ntarget <- readr::read_csv(\"https://data.ecoforecast.org/neon4cast-targets/aquatics/aquatics-targets.csv.gz\", guess_max = 1e6)\n\nA table is available with NEON site descriptions. The calculation of oxygen saturation requires the elevation of each site, which is included in the site description table.\n\nsite_data <- readr::read_csv(\"https://raw.githubusercontent.com/eco4cast/neon4cast-aquatics/master/Aquatic_NEON_Field_Site_Metadata_20220727.csv\")"
  },
  {
    "objectID": "WorkflowExample.html#step-2-get-drivers",
    "href": "WorkflowExample.html#step-2-get-drivers",
    "title": "12  Example Forecast Workflow",
    "section": "12.4 Step 2: Get drivers",
    "text": "12.4 Step 2: Get drivers\n\n12.4.1 Step 2.1: Download Paste NOAA forecast stacked together\nTo build the relations between air and water temperature, we need historical air temperature data to associate with historical water temperature data. Here we use a product that the Challenge organizers created that combines day 1 NOAA weather forecasts (i.e., when the forecasts are most accurate) together to generate an estimate of past weather. He we download this “stack” NOAA product for the set of NEON sites in the targets file.\n\nsites <- unique(target$site_id)\ndf_past <- neon4cast::noaa_stage3()\nnoaa_past <- df_past |> \n  dplyr::filter(site_id %in% sites,\n                variable == \"air_temperature\") |> \n  dplyr::collect()\n\n\n\n12.4.2 Step 2.2: Download NOAA future forecast\nWe need NOAA Weather forecasts of the future. Fortunately, the Challenge organizers are downloading and subsetting the weather forecasts for each NEON site. Here we download the weather forecast (start_date = forecast_date) that started at mid-night UTC (cycle=0) for the set of sites in the target file.\n\ndf_future <- neon4cast::noaa_stage2()\nnoaa_future <- df_future |> \n  dplyr::filter(cycle == 0,\n                start_date == forecast_date,\n                variable == \"air_temperature\") |> \n  dplyr::collect()\n\n\n\n12.4.3 Step 2.3 Aggregate (to day) and convert units of drivers\nSince we are forecasting daily mean water temperature and oxygen, we need to aggregate the 1 hr weather data to the daily time-scale. We also need to convert from Kelvin to Celsius.\n\nnoaa_past_mean <- noaa_past |> \n  mutate(date = as_date(time)) |> \n  group_by(date, site_id) |> \n  summarize(air_temperature = mean(predicted, na.rm = TRUE), .groups = \"drop\") |> \n  rename(time = date) |> \n  mutate(air_temperature = air_temperature - 273.15)\n\nFor the future weather has 31 ensemble members (i.e., different trajectories of weather), that we want to use to generate uncertainty in our water temperature and oxygen forecasts. The aggregation below maintains the separate ensemble members (group_by(date, ensemble)).\n\nnoaa_future <- noaa_future |> \n  mutate(time = as_date(time)) |> \n  group_by(time, site_id, ensemble) |> \n  summarize(air_temperature = mean(predicted)) |> \n  mutate(air_temperature = air_temperature - 273.15) |> \n  select(time, site_id, air_temperature, ensemble)\n\n\n\n12.4.4 Step 2.4: Merge in past NOAA data into the targets file, matching by date.\nBefore building our linear model we need merge in the historical air temperature to match with the historical water temperature\n\ntarget <- target |> \n  select(time, site_id, variable, observed) |> \n  filter(variable %in% c(\"temperature\", \"oxygen\")) |> \n  pivot_wider(names_from = \"variable\", values_from = \"observed\")\n\ntarget <- left_join(target, noaa_past_mean, by = c(\"time\",\"site_id\"))"
  },
  {
    "objectID": "WorkflowExample.html#step-3.0-generate-forecasts-for-each-site",
    "href": "WorkflowExample.html#step-3.0-generate-forecasts-for-each-site",
    "title": "12  Example Forecast Workflow",
    "section": "12.5 Step 3.0: Generate forecasts for each site",
    "text": "12.5 Step 3.0: Generate forecasts for each site\nWe generate a forecast for each site.\n\nforecast <- NULL\n\nfor(i in 1:length(sites)){\n  \n  # Get site information for elevation\n  site_info <- site_data %>% filter(field_site_id == sites[i]) \n  \n  site_target <- target |> \n    filter(site_id == sites[i])\n  \n  noaa_future_site <- noaa_future |> \n    filter(site_id == sites[i])\n  \n  if(length(which(!is.na(site_target$air_temperature) & !is.na(site_target$temperature))) > 0){\n    \n    #Fit linear model based on past data: water temperature = m * air temperature + b\n    fit <- lm(site_target$temperature~site_target$air_temperature)\n    \n    #use linear regression to forecast water temperature for each ensemble member\n    forecasted_temperature <- fit$coefficients[1] + fit$coefficients[2] * noaa_future_site$air_temperature\n    \n    #use forecasted temperature to predict oyxgen by assuming that oxygen is saturated.  \n    forecasted_oxygen <- rMR::Eq.Ox.conc(forecasted_temperature, elevation.m = ,site_info$field_mean_elevation_m, \n                                         bar.press = NULL, \n                                         bar.units = NULL,\n                                         out.DO.meas = \"mg/L\",\n                                         salinity = 0, \n                                         salinity.units = \"pp.thou\")\n    \n    temperature <- tibble(time = noaa_future_site$time,\n                          site_id = sites[i],\n                          ensemble = noaa_future_site$ensemble,\n                          predicted = forecasted_temperature,\n                          variable = \"temperature\")\n    \n    oxygen <- tibble(time = noaa_future_site$time,\n                     site_id = sites[i],\n                     ensemble = noaa_future_site$ensemble,\n                     predicted = forecasted_oxygen,\n                     variable = \"oxygen\")\n    \n    \n    #Build site level dataframe.  Note we are not forecasting chla\n    forecast <- dplyr::bind_rows(forecast, temperature, oxygen)\n  }\n}\n\nUse ggplot to visualize the forecast for each variable and site. The spread in forecast is due to uncertainty in the weather forecast, where each line is associated with a different NOAA GEFS weather forecast ensemble member.\n\nforecast %>% \n  ggplot(aes(x = time, y = predicted, group = ensemble)) +\n  geom_line() +\n  facet_grid(variable~site_id, scale =\"free\")\n\nForecast output file name in standards requires for Challenge. “csv.gz” means that it will be compressed\n\nforecast_file <- paste0(\"aquatics\",\"-\",min(forecast$time),\"-\",team_name,\".csv.gz\")\n\nWrite csv to disk\n\nwrite_csv(forecast, forecast_file)\n\nConfirm that output file meets standard for Challenge\n\nneon4cast::forecast_output_validator(forecast_file)"
  },
  {
    "objectID": "WorkflowExample.html#step-4-generate-metadata",
    "href": "WorkflowExample.html#step-4-generate-metadata",
    "title": "12  Example Forecast Workflow",
    "section": "12.6 Step 4: Generate metadata",
    "text": "12.6 Step 4: Generate metadata\nFirst we need to create a “list” in R that describes the forecast model. We only have one source of uncertainty (driver). It is propagated (i.e., represented in the forecasted output) using 31 ensemble members.\n\nmodel_metadata = list(\n  forecast = list(\n    model_description = list(\n      forecast_model_id =  \"air2waterSat\",  #What goes here\n      name = \"Air temperature to water temperature linear regression plus assume saturated oxygen\", \n      type = \"empirical\",  \n      repository = \"https://github.com/rqthomas/neon4cast-example\" \n    ),\n    initial_conditions = list(\n      status = \"absent\"\n    ),\n    drivers = list(\n      status = \"propagates\",\n      complexity = 1, #Just temperature\n      propagation = list( \n        type = \"ensemble\", \n        size = 31) \n    ),\n    parameters = list(\n      status = \"absent\"\n    ),\n    random_effects = list(\n      status = \"absent\"\n    ),\n    process_error = list(\n      status = \"absent\"\n    ),\n    obs_error = list(\n      status = \"absent\"\n    )\n  )\n)\n\nUsing the team_list and model_metadata above, we can create the metadata file. The function neon4cast::generate_metadata adds additional information to complete the metadata (i.e., geographic information about the site, etc.)\n\nmetadata_file <- neon4cast::generate_metadata(forecast_file, team_list, model_metadata)"
  },
  {
    "objectID": "WorkflowExample.html#step-5-submit-forecast",
    "href": "WorkflowExample.html#step-5-submit-forecast",
    "title": "12  Example Forecast Workflow",
    "section": "12.7 Step 5: Submit forecast!",
    "text": "12.7 Step 5: Submit forecast!\nNow we can submit the forecast output and the metadata file to the Challenge using the neon4cast::submit() function\n\nneon4cast::submit(forecast_file = forecast_file,\n                  metadata = metadata_file,\n                  ask = FALSE)\n\nYou can check on the status of your submission using\n\nneon4cast::check_submission(forecast_file)\n\nOn following day after submission, you can see the forecast on the dashboard at shiny3.ecoforecast.org"
  },
  {
    "objectID": "WorkflowExample.html#example-on-github",
    "href": "WorkflowExample.html#example-on-github",
    "title": "12  Example Forecast Workflow",
    "section": "12.8 Example on github",
    "text": "12.8 Example on github\nThe example code above can be found on GitHub as a template repository. See the Readme for more information about using the template"
  },
  {
    "objectID": "Helpful-Functions.html",
    "href": "Helpful-Functions.html",
    "title": "13  Helpful Functions",
    "section": "",
    "text": "The following are resources to help you prepare your forecasts for submission.\nThe neon4cast package provides a collection of convenient helper utilities so you can score your forecast locally, validate the format of your forecast files to check for formatting errors before submitting, generate forecast metadata in EML (coming soon!), access EFI snapshots of NOAA forecasts at NEON sites, and submit your forecast.\nThe neonstore package provides quick access and persistent storage of NEON data tables.\nThe EFIstandards package summarizes the proposed community standards for the common formatting and archiving of ecological forecasts by the Ecological Forecasting Initiative. These standards are a work in progress. If you have suggestions for improvement share them with eco4cast.initiative@gmail.com.”"
  },
  {
    "objectID": "Helpful-Functions.html#neon4cast-package",
    "href": "Helpful-Functions.html#neon4cast-package",
    "title": "13  Helpful Functions",
    "section": "13.1 neon4cast package",
    "text": "13.1 neon4cast package\nThe neon4cast package is located at https://github.com/eco4cast/neon4cast\nneon4cast provides the following collection of convenient helper utilities for anyone entering the EFI NEON Forecasting Challenge.\n\n13.1.1 Installation\nYou can install the development version from GitHub with:\n# install.packages(\"remotes\")\nremotes::install_github(\"eco4cast/neon4cast\")\n\n\n13.1.2 Example forecast\nlibrary(neon4cast)\nlibrary(tidyverse)\nlibrary(fable)\nlibrary(tsibble)\nDownload and read in the current target file for the Aquatics theme. For convenience, we read this in as a timeseries object, noting that the time is in the ‘time’ column, and timeseries are replicated over sites.\naquatic <- read_csv(\"https://data.ecoforecast.org/neon4cast-targets/aquatics/aquatics-targets.csv.gz\") %>% \n  as_tsibble(index=time, key=siteID)\nCreate a 35 day forecast for each variable, oxygen, and temperature. For illustrative purposes, we’ll use the fable package because it is concise and well documented. We make separate forecasts for each of the two variables before reformatting them and combining them. Note the use of efi_format helper function from the neon4cast package, which merely replaces the special <S3:distribution> column used by fable with something we can write to text: either columns with a mean/sd (for normal distributions) or otherwise random draws from the distributions.\nSo that we can score our forecast right away instead of waiting for next month’s data, we will filter out the most recent data available first.\n# drop last 35 days and use explicit NAs for gaps in timeseries\nblinded_aquatic <- aquatic %>% filter(time < max(time) - 35) %>% fill_gaps()\n\n# A simple random walk forecast, see ?fable::RW\noxygen_fc <- blinded_aquatic %>%\n  model(null = RW(oxygen)) %>%\n  forecast(h = \"35 days\") %>%\n  efi_format()\n\n## also use random walk for temperature\ntemperature_fc <- blinded_aquatic  %>%\n  model(null = RW(temperature)) %>%\n  forecast(h = \"35 days\") %>%\n  efi_format()\n\n# combine into single table, drop the .model column\nforecast <- inner_join(oxygen_fc, temperature_fc) %>% select(-.model)\n\n## Write the forecast to a file following EFI naming conventions:\nforecast_file <- glue::glue(\"{theme}-{date}-{team}.csv.gz\",\n                            theme = \"aquatics\", \n                            date=Sys.Date(),\n                            team = \"example_null\")\nwrite_csv(forecast, forecast_file)\n\n\n13.1.3 Score forecast locally\nScores for valid forecasts should appear at https://shiny.ecoforecast.org the day after they are submitted. However, it is often more convenient to generate scores locally. Note that the “score” simply the crps_sample (for ensemble forecasts) or crps_norm (for summary statistic forecasts) score from the scoringRules R package, for each unique prediction (i.e.day/site/variable tuple).\nNote that scores are only possible once the data becomes available in the corresponding targets file!\nscores <- score(forecast, theme = \"aquatics\")\n\n# The resulting data.frame scores each day for each site, but is also easy to summarize:\nscores %>% \n  group_by(siteID, target) %>% \n  summarise(mean_score = mean(score, na.rm=TRUE))\n#> # A tibble: 4 x 3\n#>   siteID target      mean_score\n#>   <chr>  <chr>            <dbl>\n#> 1 BARC   oxygen           0.677\n#> 2 BARC   temperature    NaN    \n#> 3 POSE   oxygen           0.676\n#> 4 POSE   temperature      1.42\n\n\n13.1.4 Validate a forecast file\nValidating a forecast file runs the same automated checks as the EFI server, verifying that the data is in the correct format for the appropriate challenge. Helpful errors or warnings will displayed on any invalid formats. Note that the validator accepts files in .csv (optionally compressed as .csv.gz) or netcdf.\nforecast_output_validator(forecast_file)\n#> aquatics-2021-03-17-example_null.csv.gz\n#> ✓ file name is correct\n#> \n#> ── Column specification ────────────────────────────────────────────────────────\n#> cols(\n#>   time = col_date(format = \"\"),\n#>   siteID = col_character(),\n#>   statistic = col_character(),\n#>   oxygen = col_double(),\n#>   temperature = col_double()\n#> )\n#> ✓ target variables found\n#> ✓ file has summary statistics column\n#> ✓ file has summary statistic: mean\n#> ✓ file has summary statistic: sd\n#> ✓ file has siteID column\n#> ✓ file has time column\n#> ✓ file has correct time column\n#> [1] TRUE\n\n\n13.1.5 Generate forecast metadata in EML\nSee [Metadata]\n\n\n13.1.6 Access EFI snapshots of NOAA forecasts at NEON sites\nMany forecasts will want to make use of weather forecasts as potential drivers. EFI downscales NOAA GEFS 35-day forecast products at each NEON site and makes this data available. These helper functions provide convenient access for downloading and stacking the individual forecast files.\nSee [Meteorology Inputs] for the functions\n\n\n13.1.7 Submit a forecast\nWhen you are ready to submit your forecast to EFI:\nsubmit(forecast_file)\n#> aquatics-2021-03-17-example_null.csv.gz\n#> ✓ file name is correct\n#> \n#> ── Column specification ────────────────────────────────────────────────────────\n#> cols(\n#>   time = col_date(format = \"\"),\n#>   siteID = col_character(),\n#>   statistic = col_character(),\n#>   oxygen = col_double(),\n#>   temperature = col_double()\n#> )\n#> ✓ target variables found\n#> ✓ file has summary statistics column\n#> ✓ file has summary statistic: mean\n#> ✓ file has summary statistic: sd\n#> ✓ file has siteID column\n#> ✓ file has time column\n#> ✓ file has correct time column\nIdeally you should include the optional metadata = argument with your metadata file."
  },
  {
    "objectID": "Helpful-Functions.html#neonstore-package",
    "href": "Helpful-Functions.html#neonstore-package",
    "title": "13  Helpful Functions",
    "section": "13.2 neonstore package",
    "text": "13.2 neonstore package\nThe neonstore package is located at https://github.com/eco4cast/neon4cast\nneonstore provides quick access and persistent storage of NEON data tables. neonstore emphasizes simplicity and a clean data provenance trail, see Provenance section below.\n\n  \n\nneonstore provides quick access and persistent storage of NEON data tables. neonstore emphasizes simplicity and a clean data provenance trail, see Provenance section below.\n\n13.2.1 Installation\nInstall the development version from GitHub with:\n# install.packages(\"devtools\")\ndevtools::install_github(\"cboettig/neonstore\")\n\n\n13.2.2 Quickstart\nlibrary(neonstore)\nDiscover data products of interest:\nproducts <- neon_products()\n\ni <- grepl(\"Populations\", products$themes)\nproducts[i, c(\"productCode\", \"productName\")]\n#> # A tibble: 50 x 2\n#>    productCode   productName                                              \n#>    <chr>         <chr>                                                    \n#>  1 DP1.00033.001 Phenology images                                         \n#>  2 DP1.10003.001 Breeding landbird point counts                           \n#>  3 DP1.10010.001 Coarse downed wood log survey                            \n#>  4 DP1.10020.001 Ground beetle sequences DNA barcode                      \n#>  5 DP1.10022.001 Ground beetles sampled from pitfall traps                \n#>  6 DP1.10026.001 Plant foliar traits                                      \n#>  7 DP1.10033.001 Litterfall and fine woody debris production and chemistry\n#>  8 DP1.10038.001 Mosquito sequences DNA barcode                           \n#>  9 DP1.10041.001 Mosquito-borne pathogen status                           \n#> 10 DP1.10043.001 Mosquitoes sampled from CO2 traps                        \n#> # … with 40 more rows\n \ni <- grepl(\"bird\", products$keywords)\nproducts[i, c(\"productCode\", \"productName\")]\n#> # A tibble: 1 x 2\n#>   productCode   productName                   \n#>   <chr>         <chr>                         \n#> 1 DP1.10003.001 Breeding landbird point counts\nDownload all data files in the bird survey data products.\nneon_download(\"DP1.10003.001\")\n#>   comparing hashes against local file index...\n#>   updating release manifest...\nView your store of NEON products:\nneon_index()\n#> # A tibble: 854 x 15\n#>    product  site  table   type  ext   month timestamp           horizontalPosit…\n#>    <chr>    <chr> <chr>   <chr> <chr> <chr> <dttm>                         <dbl>\n#>  1 DP1.100… BART  brd_co… basic csv   2015… 2020-12-23 14:17:30               NA\n#>  2 DP1.100… BART  brd_co… basic csv   2016… 2020-12-23 14:17:14               NA\n#>  3 DP1.100… BART  brd_co… basic csv   2017… 2020-12-23 14:17:36               NA\n#>  4 DP1.100… BART  brd_co… basic csv   2018… 2020-12-23 14:17:21               NA\n#>  5 DP1.100… BART  brd_co… basic csv   2019… 2020-12-23 14:17:45               NA\n#>  6 DP1.100… BART  brd_co… basic csv   2020… 2020-12-23 14:17:03               NA\n#>  7 DP1.100… BART  brd_co… basic csv   2020… 2020-12-23 14:17:41               NA\n#>  8 DP1.100… BART  brd_pe… basic csv   2015… 2020-12-23 14:17:30               NA\n#>  9 DP1.100… BART  brd_pe… basic csv   2016… 2020-12-23 14:17:14               NA\n#> 10 DP1.100… BART  brd_pe… basic csv   2017… 2020-12-23 14:17:36               NA\n#> # … with 844 more rows, and 7 more variables: verticalPosition <dbl>,\n#> #   samplingInterval <chr>, date_range <chr>, path <chr>, md5 <chr>,\n#> #   crc32 <chr>, release <chr>\nThese files will persist between sessions, so you only need to download once or to retrieve updates. neon_index() can take arguments to filter by product or pattern (regular expression) in table name, e.g.neon_index(table = \"brd\").\nOnce you determine the table of interest, you can read in all the component tables into a single data.frame\nneon_read(\"brd_countdata-expanded\")\n#> NULL\n\n\n13.2.3 Database backend\nneonstore now supports a backend relation database as well. Import data from the raw downloaded files using neon_store():\nneon_store(table = \"brd_countdata-expanded\")\n#> table brd_countdata-expanded not found, do you need to download first?\nAlternately, we could import all data tables associated with a given product:\nneon_store(product = \"DP1.10003.001\")\n#>   importing brd_countdata-basic-DP1.10003.001...\n#>   importing brd_perpoint-basic-DP1.10003.001...\nAccess an imported table using neon_table() instead of neon_read():\nneon_table(\"brd_countdata\")\n#> # A tibble: 203,220 x 23\n#>    uid                namedLocation     domainID siteID plotID plotType  pointID\n#>    <chr>              <chr>             <chr>    <chr>  <chr>  <chr>     <chr>  \n#>  1 01cef6c1-5851-407… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… C1     \n#>  2 43990e9a-1412-427… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… C1     \n#>  3 d4f59f3c-e3f1-4a7… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… C1     \n#>  4 4ad44b7d-1eb6-465… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… C1     \n#>  5 944a3e0e-08de-497… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… C1     \n#>  6 d4cb0f22-923b-449… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… C1     \n#>  7 0cc69b4f-650f-4f7… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… B1     \n#>  8 c6367f2f-8b74-402… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… B1     \n#>  9 406e8277-2c18-4b2… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… B1     \n#> 10 ef879541-c8d5-41c… HEAL_006.birdGri… D19      HEAL   HEAL_… distribu… B1     \n#> # … with 203,210 more rows, and 16 more variables: startDate <dttm>,\n#> #   eventID <chr>, pointCountMinute <dbl>, targetTaxaPresent <chr>,\n#> #   taxonID <chr>, scientificName <chr>, taxonRank <chr>, vernacularName <chr>,\n#> #   observerDistance <dbl>, detectionMethod <chr>, visualConfirmation <chr>,\n#> #   sexOrAge <chr>, clusterSize <dbl>, clusterCode <chr>, identifiedBy <chr>,\n#> #   file <chr>\nAccess the remote database using neon_db(). This is a DBIConnection that can easily be used with dplyr functions like tbl() or filter().\nRemember that dplyr translates these into SQL queries that run directly on the database.\nlibrary(dplyr)\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\ncon <- neon_db()\nbrd <- tbl(con, \"brd_countdata-basic-DP1.10003.001\")\nbrd %>% filter(siteID == \"ORNL\")\n#> # A tibble: 8,797 x 23\n#>    uid                namedLocation     domainID siteID plotID plotType  pointID\n#>    <chr>              <chr>             <chr>    <chr>  <chr>  <chr>     <chr>  \n#>  1 33425600-9ce1-4a9… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  2 faf5ee98-43e9-40f… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  3 2dc63a4a-3da1-4e0… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  4 7952192b-55b4-48f… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  5 41bf843e-3433-4d0… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  6 e88d8ada-e43a-409… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  7 04604bac-dd88-4d1… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  8 05a8d535-3f59-413… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#>  9 b5cccafa-acbf-41e… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#> 10 63d9e30e-ab6c-41b… ORNL_002.birdGri… D07      ORNL   ORNL_… distribu… A1     \n#> # … with 8,787 more rows, and 16 more variables: startDate <dttm>,\n#> #   eventID <chr>, pointCountMinute <dbl>, targetTaxaPresent <chr>,\n#> #   taxonID <chr>, scientificName <chr>, taxonRank <chr>, vernacularName <chr>,\n#> #   observerDistance <dbl>, detectionMethod <chr>, visualConfirmation <chr>,\n#> #   sexOrAge <chr>, clusterSize <dbl>, clusterCode <chr>, identifiedBy <chr>,\n#> #   file <chr>\nNote that we need to include the product name in the table name when accessing the database, as table names alone may not be unique. RStudio users can also list and explore all tables interactively in the Connections pane in RStudio using neon_pane().\n\n\n13.2.4 Note on API limits\nIf neon_download() exceeds the API request limit (with or without the token), neonstore will simply pause for the required amount of time to avoid rate-limit-based errors.\nThe NEON API now rate-limits requests.. Using a personal token will increase the number of requests you can make before encountering this delay. See link for directions on registering for a token. Then pass this token in .token argument of neon_download(), or for frequent use, add this token as an environmental variable, NEON_DATA to your local .Renviron file in your user’s home directory. neon_download() must first query each the API of each NEON site which collects that product, for each month the product is collected.\n(It would be much more efficient on the NEON server if the API could take queries of the from /data/<product>/<site>, and pool the results, rather than require each month of sampling separately!)\n\n\n13.2.5 Non-stacking files and low-level interface\nAt it’s core, neonstore is simply a mechanism to download files from the NEON API. While the .csv files from the Observation Systems (OS, e.g. bird count surveys), and Instrument Systems (e.g. aquatic sensors) are typically stacked into large tables, other products, such as the .laz and .tif images produced by the airborne observation platform LIDAR and cameras may require a different approach.\n# Read in a large file list for illustration purposes\ncper_data <- readr::read_csv(\"https://minio.thelio.carlboettiger.info/shared-data/neon_data_catalog.csv.gz\")\n#> Registered S3 methods overwritten by 'readr':\n#>   method           from \n#>   format.col_spec  vroom\n#>   print.col_spec   vroom\n#>   print.collector  vroom\n#>   print.date_names vroom\n#>   print.locale     vroom\n#>   str.col_spec     vroom\n#> \n#> ── Column specification ────────────────────────────────────────────────────────\n#> cols(\n#>   crc32 = col_character(),\n#>   name = col_character(),\n#>   size = col_double(),\n#>   url = col_character()\n#> )\n\n## Typically one would read all files in local store, e.g. list.file(neon_dir())\ndf <- neon_filename_parser(cper_data$name)\nlibrary(dplyr)\ndf %>% count(EXT, sort=TRUE)\n#> # A tibble: 13 x 2\n#>    EXT       n\n#>    <chr> <int>\n#>  1 csv   38816\n#>  2 <NA>   8938\n#>  3 zip    4197\n#>  4 tif    3994\n#>  5 txt    3359\n#>  6 xml    3316\n#>  7 kml    1155\n#>  8 dbf    1100\n#>  9 prj    1100\n#> 10 shp    1100\n#> 11 shx    1100\n#> 12 h5     1093\n#> 13 laz     330\nWe can take a look at all laz LIDAR files:\ndf %>% \n  filter(EXT == \"laz\")\n#> # A tibble: 330 x 31\n#>    NEON  DOM   SITE  DPL   PRNUM REV   DESC  YYYY_MM PKGTYPE GENTIME EXT   name \n#>    <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr>   <chr>   <chr>   <chr> <chr>\n#>  1 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#>  2 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#>  3 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#>  4 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#>  5 NEON  D10   CPER  DP1   <NA>  <NA>  uncl… <NA>    <NA>    <NA>    laz   NEON…\n#>  6 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#>  7 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#>  8 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#>  9 NEON  D10   CPER  DP1   <NA>  <NA>  clas… <NA>    <NA>    <NA>    laz   NEON…\n#> 10 NEON  D10   CPER  DP1   <NA>  <NA>  uncl… <NA>    <NA>    <NA>    laz   NEON…\n#> # … with 320 more rows, and 19 more variables: MISC <chr>, HOR <chr>,\n#> #   VER <chr>, TMI <chr>, YYYY_MM_DD <chr>, DATE_RANGE <chr>, FLHTSTRT <chr>,\n#> #   EHCCCCCC <chr>, IMAGEDATETIME <chr>, NNNN <chr>, NNN <chr>, R <chr>,\n#> #   FLIGHTSTRT <chr>, EEEEEE <chr>, NNNNNNN <chr>, FLHTDATE <chr>,\n#> #   FFFFFF <chr>, README <lgl>, COMPRESSION <lgl>\nNote that many of the airborne observation platform (AOP) products, such as these LIDAR files, do not include the PRNUM or REV components that make up part of the productCodes used in the NEON product tables."
  },
  {
    "objectID": "Helpful-Functions.html#efistandards-package",
    "href": "Helpful-Functions.html#efistandards-package",
    "title": "13  Helpful Functions",
    "section": "13.3 EFIstandards package",
    "text": "13.3 EFIstandards package\n\n   \nThis package summarizes the proposed community standards for the common formatting and archiving of ecological forecasts developed by the Ecological Forecasting Initiative (EFI). Such open standards are intended to promote interoperability and facilitate forecast adoption, distribution, validation, and synthesis.\n\n13.3.1 Output Files:\nEFI has proposed a three-tiered approach reflecting trade-offs in forecast data volume and technical expertise. The prefered output file format is in netCDF following standard CF conventions for dimensions and variable naming conventions, with ensemble member as a dimension where appropriate. The second-tier option is a semi-long CSV format, with state variables as columns and each row representing a unique issue datetime, prediction datetime, location, ensemble member, etc. The third-tier option is similar to option 2, but each row represents a specific summary statistic (mean, upper/lower CI) rather than individual ensemble members.\n\n\n13.3.2 Output Metadata:\nEFI’s proposed metadata represents an expansion upon the Ecological Metadata Language (EML), with two key differences. First, is the specification of additonalMetadata tags to store forecast specific information (e.g. uncertainty propagation and data assimilation) as well as some summary information about model complexity, included uncertainties, etc. designed to facilitate cross-forecast synthesis. Second, a number of EML tags (e.g. temporal resolution, output variables) are considered a required part of forecast metadata that are otherwise optional in base EML.\nThis package includes an R tool for validating these EML files.\n\n\n13.3.3 Archiving:\nEFI envisions a three-tiered approach to forecast archiving. At the most basic level, forecasts should be archived before new observations become available (not possible for hindcasts), preferably in a FAIR public archive that permits forecasts to be uploaded automatically, allows metadata to be searchable, and assigns a DOI. Second, in addition to this the codes used to generate forecasts should also be archived, preferably in an open archive or code repository (e.g. Github) that can be assigned a DOI. Finally, in addition to output and code archiving, we encourage running forecast workflows to be archived using virtualization approaches, such as Docker or Singularity containers.\n\n\n13.3.4 Vignettes:\nThis package includes a number of vignettes illustrating the application of the EFI standards to different forecasts\n\n\n13.3.5 Documentation:\nA more detailed description of the EFI standard can be found at https://shorturl.at/irMQW. Note that the Standard is a work in progress. If you find issues as you are applying them, let us know at eco4cast.initiative@gmail.com.\nPkgdown rendered documentation of functions and vignettes can be found at https://eco4cast.github.io/EFIstandards/"
  },
  {
    "objectID": "UseInCourse.html",
    "href": "UseInCourse.html",
    "title": "14  Using the Challenge in Classes",
    "section": "",
    "text": "If you are interested in using the Challenge in a class or workshop, we welcome you to reach out to us at eco4cast.initiative@gmail.com\nBased the experiences of 7+ courses using the Challenge, we have an evolving set of best practices\n\nConsider data lags: The Phenology, Terrestrial, and Aquatic challenges have data available in near-real time, therefore students submitting to these Challenges will multiple opportunities to see how their forecasts perform: Phenology is 1-day, Terrestrial is 5-days, and Aquatics is 2-days. In contrast the Beetles and Ticks challenges have 60 - 300 day latency so students may not see their forecasts evaluated in the workshop or semester.\nAdd meaning: Have students pick sites that interest them. There is not expectation that students submit forecasts for all sites in a theme.\nStart simple: Encourage students to start with simple models\nNormalize imperfection: Work with students to embrace that all models are wrong, and putting the forecast out there the key step.\nUse the example models as a template: have students build their models from the simple example models that have been made available Chapter 12 is one example and Section 9.3 are the nulls submitted to the challenge.\nPoint students to documentation: the useful functions (Chapter 13) and FAQ (Chapter 15)\nReach out: Reach out to the Challenge organizers for questions when planning your course or workshop (eco4cast.initiative@gmail.com)\n\nIf you want to access students scored forecasts, the following R function in the neon4cast package can be used:\n\nscore_df <- neon4cast::combined_scores()\n\nclass_model_ids <- #set of team names for students in class\nscore_df <- score_df |> filter(model_id %in% class_model_ids)"
  },
  {
    "objectID": "FAQ.html",
    "href": "FAQ.html",
    "title": "15  Frequently Asked Questions",
    "section": "",
    "text": "We have downloaded and temporally downscaled (6 hr to 1 hr) weather forecasts from NOAA’s Global Ensemble Forecasting System (GEFS). GEFS produces 31 different forecasts (called an ensemble with 31 members) at four cycles a day (00:00, 06:00, 12:00, and 18:00 UTC), where these are the times that the forecast starts. The forecast that starts at the 00:00 cycle runs 30 of the 31 ensemble members 35-days in the future. All other forecast cycles have members that run 16-days in the future.\nThe forecasts can be found at https://data.ecoforecast.org/minio/drivers/noaa/NOAAGEFS_1hr/\nThe following variables are available: air temperature, wind speed, relative humidity, downwelling shortwave, downwelling longwave, precipitation, and air pressure.\nThis video demonstrates how to access meteorological covariate data for the Challenge. The video was recorded for the 2021 Early Career Annual Meeting"
  },
  {
    "objectID": "FAQ.html#i-need-historical-weather-data-to-build-my-model.-where-can-i-find-it",
    "href": "FAQ.html#i-need-historical-weather-data-to-build-my-model.-where-can-i-find-it",
    "title": "15  Frequently Asked Questions",
    "section": "15.2 I need historical weather data to build my model. Where can I find it?",
    "text": "15.2 I need historical weather data to build my model. Where can I find it?\nNEON collects weather variables at each of the sites. Their data products become available in 1-month data packages that are release ~ 2 weeks after the completion of the month. For example, the June 1 data will be in the June package that is released mid-July. Therefore there is up to a 1.5 month delay. Furthermore, NEON data can have gaps that need to be gap-filled. We are working with NEON to develop gap-filled weather data that becomes available sooner than the current 1.5 month delay. The timing of the gap-filled low-latency weather product is unknown.\n\nIf you don’t need real-time data, NEON weather data products are available on the NEON data portal at the following data products:\n\n\nAir temperature: https://data.neonscience.org/data-products/DP1.00002.001\nPrecipitation: https://data.neonscience.org/data-products/DP1.00006.001\nRadiation: https://data.neonscience.org/data-products/DP1.00023.001\nWind: https://data.neonscience.org/data-products/DP1.00001.001\nRelative humidity: https://data.neonscience.org/data-products/DP1.00098.001\nAir pressure: https://data.neonscience.org/data-products/DP1.00004.001\nSummary statistics (daily, monthly, annually): https://data.neonscience.org/data-products/DP4.00001.001\n\n\nGridded weather from models that have been assimilated with observations are available from other sources including:\n\n\nNASAs National Land Data Assimilation System: 4 day delay\nDaymet is an option for daily meteorology variables, though it doesn’t yet cover 2020-2021. Daymet has an R package that can be used to download data for a single location or a set of locations.\nERA5 product has high-quality subdaily data with ensemble-based uncertainties. Download scripts are available through the PEcAn project: https://github.com/PecanProject/pecan/blob/develop/modules/data.atmosphere/R/download.ERA5.R\nOther meteorology products can be downloading using functions in PEcAn: https://github.com/PecanProject/pecan/blob/develop/modules/data.atmosphere/R/download.ERA5.R"
  },
  {
    "objectID": "FAQ.html#i-submitted-my-forecast-but-cannot-find-it-on-the-dashboard-or-in-the-directory-of-forecasts",
    "href": "FAQ.html#i-submitted-my-forecast-but-cannot-find-it-on-the-dashboard-or-in-the-directory-of-forecasts",
    "title": "15  Frequently Asked Questions",
    "section": "15.3 I submitted my forecast but cannot find it on the dashboard or in the directory of forecasts",
    "text": "15.3 I submitted my forecast but cannot find it on the dashboard or in the directory of forecasts\nA successful submission can be found at the following links within 2 hours of submissions\nYou can check the status of your submssion using the following function in the neon4cast package\n\nneon4cast::check_submission(\"phenology-2022-02-07-persistence.nc\")\n\nWe run a validator script when processing the submissions. If your submission does not meet the file standards above, you can run a function that provides information describing potential issues. The forecast file needs to be in your local working directory or you need to provide a full path to the file\n\nneon4cast::forecast_output_validator(\"phenology-2022-02-07-persistence.nc\")\n\nIf your submission did not meet the standard contact us and we can help you work through the issues."
  },
  {
    "objectID": "FAQ.html#do-i-need-to-submit-forecasts-to-every-submission-date",
    "href": "FAQ.html#do-i-need-to-submit-forecasts-to-every-submission-date",
    "title": "15  Frequently Asked Questions",
    "section": "15.4 Do I need to submit forecasts to every submission date?",
    "text": "15.4 Do I need to submit forecasts to every submission date?\nNo, we are excited to have submissions at any of the submissions dates."
  },
  {
    "objectID": "FAQ.html#where-can-i-find-examples-of-forecasts-that-match-the-required-standard",
    "href": "FAQ.html#where-can-i-find-examples-of-forecasts-that-match-the-required-standard",
    "title": "15  Frequently Asked Questions",
    "section": "15.5 Where can I find examples of forecasts that match the required standard?",
    "text": "15.5 Where can I find examples of forecasts that match the required standard?\nPending"
  },
  {
    "objectID": "FAQ.html#is-it-possible-to-automate-my-forecast-submissions",
    "href": "FAQ.html#is-it-possible-to-automate-my-forecast-submissions",
    "title": "15  Frequently Asked Questions",
    "section": "15.6 Is it possible to automate my forecast submissions?",
    "text": "15.6 Is it possible to automate my forecast submissions?\nYes. There are many ways to automate scripts that are written to download observations and metreology drivers, generate forecasts, and submit forecasts. Two tools that many have used are cron jobs (see the R package cronR) that execute tasks at user specifics times and github actions. See more at [Frequently Asked Questions]\nCron jobs work on unix and mac systems. An example of a script that executes a cron job using R can be found here."
  },
  {
    "objectID": "FAQ.html#i-am-having-trouble-generating-the-metadata.-can-you-point-me-to-more-information-tutorials-or-examples",
    "href": "FAQ.html#i-am-having-trouble-generating-the-metadata.-can-you-point-me-to-more-information-tutorials-or-examples",
    "title": "15  Frequently Asked Questions",
    "section": "15.7 I am having trouble generating the metadata. Can you point me to more information, tutorials, or examples?",
    "text": "15.7 I am having trouble generating the metadata. Can you point me to more information, tutorials, or examples?\nPending"
  },
  {
    "objectID": "FAQ.html#how-many-years-are-you-planning-to-run-the-challenge",
    "href": "FAQ.html#how-many-years-are-you-planning-to-run-the-challenge",
    "title": "15  Frequently Asked Questions",
    "section": "15.8 How many years are you planning to run the Challenge?",
    "text": "15.8 How many years are you planning to run the Challenge?\nThe RCN is a 5-year project and we aim to run the Challenge for the duration of the project. Each year will be a new round where we revise the rules (if necessary) and add new Themes. Your feedback on the Challenge will be critical to revising and clarifying the rules and information about the Challenge."
  },
  {
    "objectID": "FAQ.html#are-there-certain-types-of-models-that-i-need-to-use",
    "href": "FAQ.html#are-there-certain-types-of-models-that-i-need-to-use",
    "title": "15  Frequently Asked Questions",
    "section": "15.9 Are there certain types of models that I need to use?",
    "text": "15.9 Are there certain types of models that I need to use?\nNo, you can use any type of model, including empirical and process-based models. The only requirement is that your forecast includes uncertainty. The uncertainty can be represents using different model runs (ensemble members) or the statistics of the forecast (mean and standard deviation)."
  },
  {
    "objectID": "FAQ.html#what-is-the-relationship-between-the-challenge-and-neon",
    "href": "FAQ.html#what-is-the-relationship-between-the-challenge-and-neon",
    "title": "15  Frequently Asked Questions",
    "section": "15.10 What is the relationship between the Challenge and NEON?",
    "text": "15.10 What is the relationship between the Challenge and NEON?\nThe Challenge is run by the Ecological Forecasting Initiative Research Coordination Network that is funded by the U.S. National Science Foundation. While this effort is separate from NEON, NEON staff have been in involved in all stages of planning. NEON staff are on the project steering committee and theme design teams.\nMembers of the RCN are also on NEON’s Ecological Forecasting Technical Working Group. This is formal pathway to provide feedback to NEON."
  },
  {
    "objectID": "FAQ.html#i-am-interested-in-submitting-different-models-or-to-multiple-themes.-how-should-i-register-to-do-this",
    "href": "FAQ.html#i-am-interested-in-submitting-different-models-or-to-multiple-themes.-how-should-i-register-to-do-this",
    "title": "15  Frequently Asked Questions",
    "section": "15.11 I am interested in submitting different models or to multiple themes. How should I register to do this?",
    "text": "15.11 I am interested in submitting different models or to multiple themes. How should I register to do this?\nEach new model needs its own registration with a different model name. If you have a large team where entering everyone’s contact inforamtion will preclude submitting multiple registrations, contact us at eco4cast.initiative@gmail.com for assistance."
  },
  {
    "objectID": "FAQ.html#where-can-i-find-resources-that-provide-how-to-participate-in-the-challenge",
    "href": "FAQ.html#where-can-i-find-resources-that-provide-how-to-participate-in-the-challenge",
    "title": "15  Frequently Asked Questions",
    "section": "15.12 Where can I find resources that provide how to participate in the Challenge?",
    "text": "15.12 Where can I find resources that provide how to participate in the Challenge?\nThese following videos were recorded for the 2021 Early Career Annual Meeting. You can see the full playlist HERE or view individual videos below.\nVideos Related to Specific Steps in Forecast Creation and Submission\n\nIntroduction to the NEON Forecast Challenge\nReproducible Workflows\nUsing NEON data for the NEON Forecast Challenge\nAccessing Meteorological Covariate Data\nFrom Models to Forecasts\nSubmitting to the NEON Forecast Challenge\nEcological Forecasting Resources\n\nOverview of Each of the Challenge Themes\n\nTerrestrial Carbon and Water Fluxes\nSpring and Fall Phenology\nBeetle Communities\nAquatic Ecosystems\nTick Populations\n\nFlash Talks Highlighting Experiences By Early Career Individuals As They Submitted Their Forecasts\n\nPhenology Forecast and the Kalman Filter\nPhenology Forecast using the DALEC-SIP Model\nUsing GitHub Actions to Automate Forecast Execution and Submission"
  }
]